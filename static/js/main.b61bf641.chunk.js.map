{"version":3,"sources":["images/flaticon/001-bitcoin.svg","images/flaticon/004-exchange.svg","images/flaticon/001-chat.svg","images/flaticon/003-smartphone.svg","images/flaticon/005-idea.svg","images/flaticon/worldwide.svg","images/branding/CoinGecko.png","images/logo/logo.png","styles/index.js","components/Navigation/ReactSider.js","API/index.js","redux_actions/index.js","components/Coins/ReactCoinsList.js","components/Coins/ReactCoinScores.js","constants/index.js","ChartConfig/index.js","components/Coins/ReactCoinsDetail.js","components/General/ReactHome.js","components/General/ReactAbout.js","components/Events/ReactEvents.js","components/Empty/ReactEmpty.js","components/Global/ReactGlobal.js","components/Navigation/ReactHeader.js","components/Exchanges/ReactExchangesList.js","components/ExchangeRates/ReactExchangeRates.js","components/Navigation/ReactFooter.js","components/StatusUpdates/ReactStatusUpdates.js","components/App.js","redux_reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","contentStyle","background","padding","margin","minHeight","cardStyle","height","colStyle","marginBottom","footerStyle","backgroundColor","color","textAlign","iconStyle","fontSize","titleStyle","marginTop","Sider","Layout","SubMenu","Menu","ReactSider","react_default","a","createElement","Fragment","breakpoint","collapsedWidth","width","style","menu","mode","selectedKeys","this","props","sider_selected","defaultOpenKeys","borderRight","key","title","icon","type","Item","react_router_dom","to","Component","connect","state","axios","create","baseURL","setHeaderMenuItem","item","payload","setSiderMenuItem","Content","Title","Typography","Paragraph","ReactCoinsList","searchText","getColumnSearchProps","dataIndex","filterDropdown","_ref","setSelectedKeys","confirm","clearFilters","input","ref","node","_this","searchInput","placeholder","concat","value","onChange","e","target","onPressEnter","handleSearch","display","es_button","onClick","size","marginRight","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","main_default","highlightStyle","searchWords","autoEscape","textToHighlight","setState","fetchCoins","loading","data","length","columns","Object","objectSpread","tag","id","Navigation_ReactSider","layout","level","table","bordered","dataSource","mapActionsToProps","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","response","wrap","_context","prev","next","coinGecko","get","sent","stop","_x","_x2","apply","arguments","coins","ReactCoinScores","row","gutter","col","xs","sm","md","lg","xl","card","statistic","precision","community_score","coingecko_score","developer_score","liquitidy_score","market_cap_rank","coingecko_rank","market_processed_table_keys","market_stat_keys","ChartConfig","responsive","scales","xAxes","gridLines","ticks","maxTicksLimit","yAxes","ReactCoinsDetail","coinId","match","params","fetchCoinDetails","finalColumns","toConsumableArray","map","keyCount","keys","chartData","labels","market_data","sparkline_7d","price","index","datasets","label","liquidity_score","last_updated","ReactCoinsDetail_Content","skeleton","active","ReactCoinsDetail_Title","avatar","shape","src","image","large","name","ReactCoinsDetail_Paragraph","rowKey","overflowX","market_data_processed","react_chartjs_2_es","options","chartOptions","_ref2","_callee2","_context2","_x3","_x4","coin_details","Meta","Card","features","svg","svg1","description","svgChat","svgExchangeRate","svgMobile","svgUpdate","svgWorldwide","ReactHome","ReactHome_Content","ReactHome_Title","ReactHome_Paragraph","border","cover","alt","maxWidth","ReactAbout","ReactAbout_Content","className","ReactAbout_Title","ReactAbout_Paragraph","rel","href","coinGeckoLogo","list","renderItem","c","pagination","version","purpose","ReactEvents","fetchEvents","ReactEvents_Content","ReactEvents_Title","ReactEvents_Paragraph","itemLayout","extra","screenshot","website","venue","slice","country","timeline","dot","fontWeight","start_date","end_date","_ref3","_callee3","_context3","_x5","_x6","events","ReactEmpty","ReactEmpty_Content","ReactEmpty_Title","empty","ReactGlobal","fetchGlobal","_this$props$data","active_cryptocurrencies","market_cap_change_percentage_24h_usd","ongoing_icos","upcoming_icos","ended_icos","markets","ReactGlobal_Content","ReactGlobal_Title","ReactGlobal_Paragraph","suffix","_ref7","_callee7","_context7","_x13","_x14","global","Header","ReactHeader","selected","theme","lineHeight","maxHeight","logoImage","header_selected","ReactExchangesList","fetchExchanges","ReactExchangesList_Content","ReactExchangesList_Title","ReactExchangesList_Paragraph","_ref5","_callee5","_context5","_x9","_x10","exchanges","ReactExchangeRates","fetchExchangeRates","ReactExchangeRates_Content","ReactExchangeRates_Title","ReactExchangeRates_Paragraph","_ref4","_callee4","_context4","_x7","_x8","exchange_rates","Footer","ReactFooter","ReactStatusUpdates","fetchStatusUpdates","ReactStatusUpdates_Content","ReactStatusUpdates_Title","ReactStatusUpdates_Paragraph","project","user","user_title","created_at","category","_ref6","_callee6","_context6","_x11","_x12","status_updates","App","Navigation_ReactHeader","react_router","path","exact","component","rootReducer","combineReducers","action","console","log","values","rates","marketData","market_index","field","entries","i","_objectSpread2","_data$key","defineProperty","compileMarketData","middlewares","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","ReactDOM","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b61bf641.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/001-bitcoin.4522051b.svg\";","module.exports = __webpack_public_path__ + \"static/media/004-exchange.07044d49.svg\";","module.exports = __webpack_public_path__ + \"static/media/001-chat.9778fdd3.svg\";","module.exports = __webpack_public_path__ + \"static/media/003-smartphone.ee821675.svg\";","module.exports = __webpack_public_path__ + \"static/media/005-idea.6f959824.svg\";","module.exports = __webpack_public_path__ + \"static/media/worldwide.2769477c.svg\";","module.exports = __webpack_public_path__ + \"static/media/CoinGecko.896961f6.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ff4e6e19.png\";","export const contentStyle = {\r\n    background: '#ffffff',\r\n    padding: '2rem',\r\n    margin: 0,\r\n    minHeight: 700,\r\n}\r\n\r\nexport const cardStyle = {\r\n    height: '100%'\r\n};\r\n\r\nexport const colStyle = {\r\n    marginBottom: '1rem'\r\n};\r\n\r\nexport const footerStyle = {\r\n    backgroundColor: '#031529', \r\n    color:'white', \r\n    textAlign: 'center'\r\n}\r\n\r\nexport const iconStyle = {\r\n    fontSize: '1.25rem'\r\n}\r\n\r\nexport const titleStyle = {\r\n    marginTop: '3rem'\r\n}","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { iconStyle } from '../../styles';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Sider } = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\nclass ReactSider extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Sider \r\n                breakpoint=\"md\"\r\n                collapsedWidth=\"0\"\r\n                width={240} \r\n                style={{ background: '#fff' }}>\r\n                    <Menu\r\n                    mode=\"inline\"\r\n                    selectedKeys={[this.props.sider_selected]}\r\n                    defaultOpenKeys={['menu-exchange-rates', 'menu-updates', 'menu-coins', 'menu-events', 'menu-global', 'menu-exchanges']}\r\n                    style={{ height: '100%', borderRight: 0 }}\r\n                    >\r\n                    {/* Status updates */}\r\n                    <SubMenu\r\n                        key=\"menu-updates\"\r\n                        title={\r\n                        <span>\r\n                            <Icon type=\"alert\" style={iconStyle}/>Updates\r\n                        </span>\r\n                        }\r\n                        >\r\n                        <Menu.Item key=\"status-list\"><Link to='/status/list'>Updates Listing</Link></Menu.Item>\r\n                    </SubMenu>\r\n                   {/* Coin Sub Menu */}\r\n                    <SubMenu\r\n                        key=\"menu-coins\"\r\n                        title={\r\n                        <span>\r\n                            <Icon type=\"dollar\" style={iconStyle}/>Coins\r\n                        </span>\r\n                        }\r\n                        >\r\n                        <Menu.Item key=\"coin-list\"><Link to='/coins'>Coin Listing</Link></Menu.Item>\r\n                        <Menu.Item key=\"coin-detail\"><Link to='/coins/bitcoin'>Coin Detail View</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    \r\n                    {/* Events Sub Menu */}\r\n                    <SubMenu\r\n                        key=\"menu-events\"\r\n                        title={\r\n                        <span>\r\n                            <Icon type=\"team\" style={iconStyle}/>Events\r\n                        </span>\r\n                        }\r\n                        >\r\n                        <Menu.Item key=\"events-list\"><Link to='/events/list'>Events Listing</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    \r\n                    {/* Exchanges Menu */}\r\n                    <SubMenu\r\n                    key=\"menu-exchanges\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"bank\" style={iconStyle}/>\r\n                            Exchanges\r\n                        </span>\r\n                        }>\r\n                    <Menu.Item key=\"exchanges-list\"><Link to='/exchanges/list'>Exchanges Listing</Link></Menu.Item>\r\n                    </SubMenu>\r\n\r\n                    {/* Exchange Rates Menu */}\r\n                    <SubMenu\r\n                    key=\"menu-exchange-rates\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"dollar\" style={iconStyle}/>\r\n                            Exchange Rates\r\n                        </span>\r\n                        }>\r\n                    <Menu.Item key=\"exchange-rates-list\"><Link to='/exchange-rates'>Exchange Rates Listing</Link></Menu.Item>\r\n                    </SubMenu>\r\n\r\n\r\n                    {/* Global Sub Menu */}\r\n                    <SubMenu\r\n                        key=\"menu-global\"\r\n                        title={\r\n                        <span>\r\n                            <Icon type=\"global\" style={iconStyle}/>\r\n                            Global\r\n                        </span>\r\n                        }\r\n                    >\r\n                        <Menu.Item key=\"global-main\"><Link to='/global'>Data</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    </Menu>\r\n                </Sider>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sider_selected: state.sider_selected\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(ReactSider)\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.coingecko.com/api/v3'\r\n})","import coinGecko from '../API';\r\n\r\nexport const fetchCoins = () => async (dispatch, getState ) => {\r\n    const response = await coinGecko.get('/coins/list')\r\n    dispatch({\r\n        type: 'GET_COINS',\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchCoinDetails = (coinId) => async (dispatch, getState) => {\r\n    const response = await coinGecko.get(`coins/${coinId}?localization=false&tickers=false&market_data=true&community_data=false&sparkline=true&developer_data=false`);\r\n    dispatch({\r\n        type: 'GET_COIN_DETAILS',\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchEvents = () => async (dispatch, getState ) => {\r\n    const response = await coinGecko.get('/events')\r\n    dispatch({\r\n        type: 'GET_EVENTS',\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchExchangeRates = () => async (dispatch, getState ) => {\r\n    const response = await coinGecko.get('/exchange_rates')\r\n    dispatch({\r\n        type: 'GET_EXCHANGE_RATES',\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchExchanges = () => async (dispatch, getState ) => {\r\n    const response = await coinGecko.get('/exchanges')\r\n    dispatch({\r\n        type: 'GET_EXCHANGES',\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchStatusUpdates = () => async (dispatch, getState ) => {\r\n    const response = await coinGecko.get('/status_updates')\r\n    dispatch({\r\n        type: 'GET_STATUS_UPDATES',\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchGlobal = () => async (dispatch, getState) => {\r\n    const response = await coinGecko.get('/global')\r\n    dispatch({\r\n        type: 'GET_GLOBAL',\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const setHeaderMenuItem = (item) => {\r\n    return {\r\n        type: 'SET_HEADER_MENU_ITEM',\r\n        payload: { item }\r\n    }\r\n}\r\n\r\nexport const setSiderMenuItem = (item) => {\r\n    return {\r\n        type: 'SET_SIDER_MENU_ITEM',\r\n        payload: { item }\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nimport { Link } from 'react-router-dom';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { fetchCoins, setSiderMenuItem } from '../../redux_actions';\r\nimport { connect } from 'react-redux';\r\nimport { Layout, Table, Typography, Button, Tag, Input, Icon } from 'antd';\r\nimport { contentStyle } from '../../styles';\r\nconst { Content } = Layout;\r\nconst { Title, Paragraph } = Typography;\r\n\r\n\r\nclass ReactCoinsList extends Component {\r\n\r\n    state = {\r\n        searchText: ''\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n            <Input\r\n                ref={node => {\r\n                this.searchInput = node;\r\n                }}\r\n                placeholder={`Search ${dataIndex}`}\r\n                value={selectedKeys[0]}\r\n                onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n                style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n                icon=\"search\"\r\n                size=\"small\"\r\n                style={{ width: 90, marginRight: 8 }}\r\n            >\r\n                Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                Reset\r\n            </Button>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n            <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n            }\r\n        },\r\n        render: text => (\r\n            <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n            />\r\n        ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n    };\r\n    \r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    componentDidMount () {\r\n        this.props.fetchCoins();\r\n        this.props.setSiderMenuItem('coin-list');\r\n    }\r\n\r\n    render() {\r\n        const loading = this.props.data.length > 0 ? false: true;\r\n\r\n        const columns=[\r\n            {\r\n                title:'Id',\r\n                dataIndex:'id',\r\n                key:'id',\r\n                ...this.getColumnSearchProps('id')\r\n            },\r\n            {\r\n                title:'Symbol',\r\n                dataIndex:'symbol',\r\n                key:'symbol',\r\n                ...this.getColumnSearchProps('symbol')\r\n            },\r\n            {\r\n                title:'Name',\r\n                dataIndex:'name',\r\n                key:'name',\r\n                ...this.getColumnSearchProps('name'),\r\n                render: item => <Tag color=\"purple\">{item}</Tag>\r\n            },\r\n            {\r\n                title:'View Details',\r\n                dataIndex:'id',\r\n                key:'id',\r\n                render: id => (<Button type=\"primary\"><Link to={`/coins/${id}`}>View</Link></Button>)\r\n            }\r\n        ];\r\n        return (\r\n            <React.Fragment>\r\n                <ReactSider/>\r\n                <Layout style={{ padding: '1rem' }}>\r\n                    <Content style={contentStyle}>\r\n                        <Title level={2}>Coins List</Title>\r\n                        <Paragraph>This page lists cryptocurrencies available through the CoinGecko API. To view details of a given coin, click 'View' button. You can also filter by Id, Symbol or Name to drill down and find a coin.</Paragraph>\r\n                        <Table \r\n                        bordered={true}\r\n                        loading={loading} \r\n                        dataSource={this.props.data} \r\n                        columns={columns}/>\r\n                    </Content>\r\n                </Layout>\r\n            </React.Fragment>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.coins\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = { fetchCoins, setSiderMenuItem\r\n }\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactCoinsList);\r\n","import React from 'react'\r\nimport { Row, Col, Card, Statistic } from 'antd';\r\nimport { cardStyle, colStyle } from '../../styles';\r\n\r\n\r\nexport default function ReactCoinScores(props) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row gutter={16} style={{textAlign: 'center'}} type=\"flex\">\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                    <Card style={cardStyle}>\r\n                        <Statistic precision={1} title=\"community_score\" value={props.community_score}/>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                    <Card style={cardStyle}>\r\n                        <Statistic precision={1} title=\"coingecko_score\" value={props.coingecko_score}/>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                    <Card style={cardStyle}>\r\n                        <Statistic precision={1} title=\"developer_score\" value={props.developer_score}/>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                    <Card style={cardStyle}>\r\n                        <Statistic title=\"liquitidy_score\" value={props.liquitidy_score}/>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                    <Card style={cardStyle}>\r\n                        <Statistic title=\"market_cap_rank\" value={props.market_cap_rank}/>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                    <Card style={cardStyle}>\r\n                        <Statistic title=\"coingecko_rank\" value={props.coingecko_rank}/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","export const market_processed_table_keys = [\"ath\"\r\n,\"ath_change_percentage\"\r\n,\"current_price\"\r\n,\"high_24h\"\r\n,\"low_24h\"\r\n,\"market_cap\"\r\n,\"price_change_percentage_7d_in_currency\"\r\n,\"price_change_percentage_30d_in_currency\"\r\n,\"total_volume\"]\r\n\r\nexport const market_stat_keys = [\"circulating_supply\",\r\n\"total_supply\",\r\n\"public_interest_score\",\r\n\"market_cap_change_24h\",\r\n\"market_cap_change_percentage_24h\",\r\n\"price_change_percentage_14d\",\r\n\"price_change_percentage_1y\",\r\n\"price_change_percentage_200d\",\r\n\"price_change_percentage_24h\",\r\n\"price_change_percentage_30d\",\r\n\"price_change_percentage_60d\",\r\n\"price_change_percentage_7d\"\r\n]  ","export default {\r\n    responsive: true,\r\n    scales: {\r\n        xAxes: [{\r\n            gridLines: {\r\n                display:false\r\n            },\r\n            ticks: {\r\n                maxTicksLimit: 16\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            gridLines: {\r\n                display:false\r\n            },\r\n            ticks: {\r\n                maxTicksLimit: 6\r\n            }\r\n        }]\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCoinDetails, setSiderMenuItem } from '../../redux_actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Tag, Icon, Table, Skeleton, Row, Col, Button, Card, Typography, Avatar, Statistic } from 'antd';\r\nimport { contentStyle, cardStyle, colStyle, titleStyle } from '../../styles';\r\nimport ReactCoinScores from './ReactCoinScores';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { market_processed_table_keys, market_stat_keys } from '../../constants';\r\nimport chartOptions from '../../ChartConfig';\r\nimport ReactSider from '../Navigation/ReactSider';\r\n\r\nconst { Content } = Layout;\r\nconst { Title, Paragraph } = Typography;\r\n\r\n\r\nclass ReactCoinsDetail extends Component {\r\n\r\n    componentDidMount() {\r\n        const { coinId } = this.props.match.params;\r\n        this.props.fetchCoinDetails(coinId);\r\n        this.props.setSiderMenuItem('coin-detail');\r\n    }\r\n\r\n    render() {\r\n\r\n        let finalColumns = [\r\n            {\r\n                title:'currency', \r\n                key: 'currency', \r\n                dataIndex: 'currency', \r\n                render: item=> <Tag color=\"purple\">{item}</Tag>}, ...market_processed_table_keys.map(item => ({title: item, key: item, dataIndex: item\r\n                }))\r\n            ]\r\n\r\n        const keyCount = Object.keys(this.props.data).length;\r\n        const chartData = {\r\n            labels: keyCount > 0 ? this.props.data.market_data.sparkline_7d.price.map((item, index) => index) : [],\r\n            datasets: [\r\n                {\r\n                    label: 'Sparkline 7d',\r\n                    data: keyCount > 0 ? this.props.data.market_data.sparkline_7d.price : [],\r\n                    backgroundColor: 'rgba(55, 144, 255, 0.8)'\r\n                }\r\n            ]\r\n        }\r\n\r\n        const { coingecko_rank } = this.props.data;\r\n        const { market_cap_rank } = this.props.data;\r\n        const { developer_score } = this.props.data;\r\n        const { community_score } = this.props.data;\r\n        const { liquidity_score } = this.props.data;\r\n        const { coingecko_score } = this.props.data;\r\n\r\n        const { market_data } = this.props.data;\r\n        const { last_updated } = this.props.data; \r\n        \r\n        const loading = Object.keys(this.props.data).length > 0 ? false : true;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ReactSider/>\r\n                <Layout style={{ padding: '1rem' }}>\r\n                    <Content style={contentStyle}>\r\n                        { \r\n                            loading ?\r\n                            <React.Fragment>\r\n                                <Skeleton active/>\r\n                                <Skeleton active/>\r\n                                <Skeleton active/>\r\n                                <Skeleton active/>\r\n                            </React.Fragment> \r\n                                :\r\n                            <React.Fragment>\r\n                                \r\n                                <Title level={2}>\r\n                                    <Avatar \r\n                                    shape=\"square\" \r\n                                    size=\"large\" \r\n                                    src={this.props.data.image.large}\r\n                                    style={{marginRight:'1rem'}}/>\r\n                                    { this.props.data.name }\r\n                                </Title>\r\n\r\n                                <Paragraph>Last updated on <Tag color=\"green\">{last_updated}</Tag></Paragraph>\r\n\r\n                                <Button style={{marginBottom: '1rem'}}>\r\n                                    <Icon type=\"left\" />\r\n                                    <Link to='/coins'>Back to coins list</Link>\r\n                                </Button>\r\n                                <Title level={3} style={{marginTop: '3rem'}}>\r\n                                    Scores and Ranks\r\n                                </Title>\r\n                                <ReactCoinScores\r\n                                coingecko_rank={coingecko_rank}\r\n                                market_cap_rank={market_cap_rank}\r\n                                developer_score={developer_score}\r\n                                community_score={community_score}\r\n                                liquidity_score={liquidity_score}\r\n                                coingecko_score={coingecko_score}/>\r\n                                \r\n                                <Title level={3} style={titleStyle}>\r\n                                    Market Stats\r\n                                </Title>\r\n                                <Row gutter={16} style={{textAlign: 'center'}} type=\"flex\">\r\n                                    {\r\n                                        market_stat_keys.map((key, index) => (\r\n                                            <Col key={index} xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                                                <Card style={cardStyle}>\r\n                                                    <Statistic precision={1} title={key} value={market_data[key]}/>\r\n                                                </Card>\r\n                                            </Col>\r\n                                        ))\r\n                                    }\r\n                                </Row>\r\n\r\n                                <Title level={3} style={titleStyle}>Detailed market data</Title>\r\n                                <Table \r\n                                rowKey = \"currency\"\r\n                                style={{overflowX:'auto'}}\r\n                                bordered \r\n                                dataSource={this.props.data.market_data_processed} \r\n                                columns={finalColumns}>\r\n                                </Table>\r\n\r\n                                <Title level={3} style={titleStyle}>\r\n                                    7 Day Sparkline\r\n                                </Title>\r\n                                <Paragraph>Each unit on the x-axis represents 1 hour.</Paragraph>\r\n\r\n                                <Line data={chartData} options={chartOptions}/>\r\n\r\n                            </React.Fragment>\r\n                        }                    \r\n                    </Content>\r\n                </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.coin_details\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = { fetchCoinDetails, setSiderMenuItem }\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactCoinsDetail)\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Typography, Card, Row, Col } from \"antd\";\r\nimport { contentStyle } from \"../../styles\";\r\nimport svg1 from \"../../images/flaticon/001-bitcoin.svg\";\r\nimport svgExchangeRate from \"../../images/flaticon/004-exchange.svg\";\r\nimport svgChat from \"../../images/flaticon/001-chat.svg\";\r\nimport svgMobile from \"../../images/flaticon/003-smartphone.svg\";\r\nimport svgUpdate from \"../../images/flaticon/005-idea.svg\";\r\nimport svgWorldwide from \"../../images/flaticon/worldwide.svg\";\r\nimport { colStyle } from \"../../styles\";\r\nimport { connect } from 'react-redux';\r\nimport { setHeaderMenuItem } from '../../redux_actions';\r\n\r\n\r\nconst { Content } = Layout;\r\nconst { Meta } = Card;\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst features = [\r\n  {\r\n    svg: svg1,\r\n    title: \"Statistics\",\r\n    description:\r\n      \"Statistics and charts are available in real-time.\"\r\n  },\r\n  {\r\n    svg: svgChat,\r\n    title: \"Community\",\r\n    description:\r\n      \"Be informed about upcoming cryptocurrency events in your area.\"\r\n  },\r\n  {\r\n    svg: svgExchangeRate,\r\n    title: \"Exchange Rates\",\r\n    description:\r\n      \"View up to date exchange rates for your favourite cryptocurrencies.\"\r\n  },\r\n  {\r\n    svg: svgMobile,\r\n    title: \"Mobile Friendly\",\r\n    description:\r\n      \"This site aims to be mobile friendly. View website on any device you like.\"\r\n  },\r\n  {\r\n    svg: svgUpdate,\r\n    title: \"Updates\",\r\n    description: \"App is continuously updated with the latest data, reflecting coingecko API.\"\r\n  },\r\n  {\r\n    svg: svgWorldwide,\r\n    title: \"Global\",\r\n    description: \"Data availability on a global scale\"\r\n  }\r\n];\r\n\r\nclass ReactHome extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.setHeaderMenuItem('home')\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{ padding: \"1rem\" }}>\r\n        <Content style={contentStyle}>\r\n          <Title level={2}>Crypto</Title>\r\n          <Paragraph>\r\n            Bringing you cryptocurrency related data in a user friendly,\r\n            digestible dashboard platform.\r\n          </Paragraph>\r\n\r\n          <Title level={3}>Features</Title>\r\n\r\n          <Row gutter={16} style={{ textAlign: \"center\" }} type=\"flex\">\r\n            {features.map((item, index) => (\r\n              <Col\r\n                key={index}\r\n                xs={24}\r\n                sm={24}\r\n                md={8}\r\n                lg={8}\r\n                xl={8}\r\n                style={colStyle}\r\n              >\r\n                <Card\r\n                  style={{ border: \"none\" }}\r\n                  cover={\r\n                    <img\r\n                      alt=\"Home page crypto svg\"\r\n                      style={{\r\n                        padding: \"2rem\",\r\n                        maxWidth: \"200px\",\r\n                        margin: \"auto\"\r\n                      }}\r\n                      src={item.svg}\r\n                    />\r\n                  }\r\n                >\r\n                  <Meta title={item.title} description={item.description} />\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paragraph>Icons provided by flaticon.</Paragraph>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  setHeaderMenuItem\r\n}\r\n\r\nexport default connect(null, mapActionsToProps)(ReactHome);\r\n","import React, { Component } from 'react';\r\nimport { Layout, List, Tag, Typography, Table } from 'antd';\r\nimport { contentStyle } from '../../styles';\r\nimport coinGeckoLogo from '../../images/branding/CoinGecko.png';\r\nimport {connect} from 'react-redux';\r\nimport { setHeaderMenuItem } from '../../redux_actions';\r\nconst { Content } = Layout;\r\nconst { Title, Paragraph } = Typography;\r\n\r\n\r\nclass ReactAbout extends Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.setHeaderMenuItem('about')\r\n    }\r\n\r\n    render() {\r\n\r\n        const packages = [\r\n            {\r\n                name: 'antd',\r\n                version: '^3.20.6',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'gh-pages',\r\n                version: '^2.0.1',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'react',\r\n                version: '^16.8.6',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'react-dom',\r\n                version: '^16.8.6',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'react-router-dom',\r\n                version: '^5.0.1',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'react-scripts',\r\n                version: '3.0.1',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'react-chartjs-2',\r\n                version: '^2.7.6',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'axios',\r\n                version :'^0.19.0',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'redux-thunk',\r\n                version :'^2.3.0',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'redux',\r\n                version :'^4.0.4',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'react-redux',\r\n                version: '^7.1.0',\r\n                purpose: ''\r\n            }\r\n            ];\r\n\r\n            const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: 'Version',\r\n                dataIndex: 'version',\r\n                key: 'version',\r\n                render: item => <Tag color=\"green\">{item}</Tag>\r\n            }];\r\n            \r\n            const challenges = [\r\n                'Organizing large amounts of data from third party API.'\r\n                ,'Complex routing within nested components.'\r\n                ,'Restructuring data from API calls into a suitable format for UI components.'\r\n                ,'Creating maintainable structure for components and resusable configurations.'\r\n                ,'Learning to use a brand new UI framework (Ant Design UI).'\r\n            ]\r\n\r\n        return (\r\n            <Layout style={{ padding: '1rem' }}>\r\n                <Content className=\"text-focus-in\" style={{...contentStyle}}>\r\n                    <Title level={2}>About Page</Title>\r\n                    <Paragraph>Consolidating RESTFUL calls from the CoinGecko API into a React application. I'll be using v3 of the API (the most recent version at the time of starting this project) This app will be using ant design for UI. </Paragraph>\r\n                    \r\n                    \r\n                    <Title level={3}>Purpose</Title>\r\n                    <Paragraph>This project was built in order to further learning and development of React applications, especially those involving connecting to third party APIs.</Paragraph>\r\n                    \r\n                    <Title level={3}>Data source</Title>\r\n                    <Paragraph>All the data which this application ingests and displays is processed from the CoinGecko API. A free and publicly available cryptocurrency api. Click below to visit CoinGecko official website.</Paragraph>\r\n                    \r\n                        <a \r\n                        rel=\"noopener noreferrer\" \r\n                        target=\"_blank\" \r\n                        href=\"https://www.coingecko.com/en/api#\">\r\n                        <img \r\n                        className=\"responsive-image\"\r\n                        alt=\"coingecko api link\"\r\n                        style={{border: '1px solid #f3f3f3', maxWidth: '400px'}} \r\n                        src={coinGeckoLogo}>\r\n                        </img>\r\n                    </a>\r\n                    <Paragraph/>\r\n\r\n                    <Title level={3}>Challenges</Title>\r\n                    <Paragraph>Building this application posed some challenges;</Paragraph>\r\n                    <List\r\n                    style={{marginBottom: '2rem'}}\r\n                    size=\"medium\"\r\n                    bordered\r\n                    dataSource={challenges}\r\n                    renderItem={c => <List.Item>{c}</List.Item>}\r\n                    />\r\n\r\n                    <Title level={3}>Packages used in this project</Title>\r\n                    <Paragraph>The following packages were installed via <strong>npm</strong></Paragraph>\r\n                    \r\n                    <Table\r\n                    bordered\r\n                    pagination={false} \r\n                    dataSource={packages} \r\n                    columns={columns}></Table>\r\n                    \r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setHeaderMenuItem\r\n}\r\n\r\nexport default connect(null, mapActionsToProps)(ReactAbout);\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Layout, List, Tag, Timeline, Typography, Icon } from 'antd';\r\nimport { contentStyle } from '../../styles';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nimport { fetchEvents, setSiderMenuItem } from '../../redux_actions';\r\nimport { connect } from 'react-redux';\r\nconst { Title, Paragraph } = Typography;\r\nconst { Content } = Layout;\r\n\r\nclass ReactEvents extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchEvents()\r\n        this.props.setSiderMenuItem('events-list')\r\n    }\r\n\r\n    render() {\r\n        const loading = this.props.data.length > 0 ? false : true;\r\n        return (\r\n            <React.Fragment>\r\n                <ReactSider/>\r\n                <Layout style={{ padding: '1rem' }}>\r\n                <Content style={contentStyle}>\r\n                    <Title level={2}>Events</Title>\r\n                    <Paragraph>This page shows cryptocurrency related events around the globe...</Paragraph>\r\n\r\n                    <List\r\n                    loading={loading}\r\n                    itemLayout=\"vertical\"\r\n                    size=\"large\"\r\n                    dataSource={this.props.data}\r\n                    renderItem={item => (\r\n                    <List.Item\r\n                        key={item.title}\r\n                        extra={\r\n                        <img\r\n                            className=\"responsive-image\"\r\n                            style={{maxWidth: '400px'}}\r\n                            alt={item.title}\r\n                            src={item.screenshot}\r\n                        />\r\n                        }\r\n                    >\r\n                        <List.Item.Meta\r\n                        title={<a href={item.website}>{item.title}</a>}\r\n                        description={item.venue}\r\n                        />\r\n                        {item.description.slice(0, 500)}...\r\n\r\n                        <div style={{margin: '1.5rem 0rem'}} >\r\n                            <Tag color=\"blue\">Type: {item.type}</Tag>\r\n                            <Tag color=\"blue\">Location: {item.country}</Tag>\r\n                        </div>\r\n\r\n                        <Timeline>\r\n                            <Timeline.Item \r\n                            color=\"blue\"\r\n                            dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />}>Event starts on <span style={{fontWeight: 500}}>{ item.start_date }</span>\r\n                            </Timeline.Item>\r\n                            <Timeline.Item \r\n                            color=\"red\"\r\n                            dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />}>Event ends on <span style={{fontWeight: 500}}>{ item.end_date }</span>\r\n                            </Timeline.Item>\r\n                        </Timeline>\r\n                        \r\n                    </List.Item>\r\n                    )}\r\n                />\r\n                </Content>\r\n            </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.events\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchEvents, \r\n    setSiderMenuItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactEvents);\r\n","import React, { Component } from 'react';\r\nimport { Layout, Typography, Empty } from 'antd';\r\nimport { contentStyle } from '../../styles';\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\n\r\nexport default class ReactEmpty extends Component {\r\n    render() {\r\n        return (\r\n            <Layout style={{ padding: '1rem' }}>\r\n                <Content className=\"text-focus-in\" style={contentStyle}>\r\n                    <Title level={2}>In development</Title>\r\n                    <Empty description=\"This page is currently in development. Please check on it at a later time...\"></Empty>\r\n                </Content>\r\n            </Layout>        \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchGlobal, setSiderMenuItem } from '../../redux_actions';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nimport { Col, Statistic, Card, Row, Layout, Typography } from 'antd';\r\nimport { contentStyle, colStyle, cardStyle } from '../../styles';\r\n\r\n\r\nconst { Content } = Layout;\r\nconst { Paragraph, Title } = Typography;\r\n\r\nclass ReactGlobal extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchGlobal();\r\n        this.props.setSiderMenuItem('global-main');\r\n    }\r\n\r\n    render() {\r\n        const loading = Object.keys(this.props.data).length > 0 ? false : true;\r\n        const {\r\n            active_cryptocurrencies, \r\n            market_cap_change_percentage_24h_usd,\r\n            ongoing_icos, \r\n            upcoming_icos, \r\n            ended_icos, \r\n            markets} = this.props.data\r\n        return (\r\n            <React.Fragment>\r\n                <ReactSider/>\r\n                <Layout style={{ padding: '1rem' }}>\r\n                    <Content style={contentStyle}>\r\n                        <Title level={2}>Global Data</Title>\r\n                        <Paragraph>This page lists global data attributes and values.</Paragraph>\r\n                        <Row gutter={16} style={{textAlign: 'center'}} type=\"flex\">\r\n\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle} loading={loading}>\r\n                                    <Statistic title=\"Markets\" value={markets}/>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle} loading={loading}>\r\n                                    <Statistic suffix='%' precision={2} title=\"Market Cap Change Percent (24hr USD)\" value={market_cap_change_percentage_24h_usd}/>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle} loading={loading}>\r\n                                    <Statistic title=\"Active Cryptocurrencies\" value={active_cryptocurrencies}/>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                            <Card style={cardStyle} loading={loading}>\r\n                                    <Statistic title=\"Ongoing Initial Coin Offerings (ICOS)\" value={ongoing_icos}/>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle} loading={loading}>\r\n                                    <Statistic title=\"Upcoming Initial Coin Offerings (ICOS)\" value={upcoming_icos}/>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle} loading={loading}>\r\n                                    <Statistic title=\"Ended Initial Coin Offerings (ICOS)\" value={ended_icos} />\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Content>\r\n                </Layout>\r\n            </React.Fragment>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.global\r\n    } \r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchGlobal,\r\n    setSiderMenuItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactGlobal);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { iconStyle } from '../../styles';\r\nimport logoImage from '../../images/logo/logo.png';\r\nimport { connect } from 'react-redux';\r\nimport { setHeaderMenuItem } from '../../redux_actions'; \r\n\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\nclass ReactHeader extends Component {\r\n\r\n    render() {\r\n        const { selected } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Header className=\"header\">\r\n                    <Menu\r\n                        theme=\"dark\"\r\n                        mode=\"horizontal\"\r\n                        selectedKeys={[selected]}\r\n                        style={{ lineHeight: '64px'}}\r\n                    >\r\n                        <Menu.Item key=\"logo\" onClick={()=>this.props.setHeaderMenuItem('home')}>\r\n                            <Link to=\"/\">\r\n                            <img alt=\"daniel corcorans crypto react app logo\" \r\n                            style={{ maxHeight: '40px'}} \r\n                            src={logoImage}></img>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"home\" onClick={()=>this.props.setHeaderMenuItem('home')}>\r\n                            <Link to=\"/\">\r\n                                <Icon type=\"home\" style={iconStyle}/>Home\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"dashboard\" onClick={()=>this.props.setHeaderMenuItem('dashboard')}>\r\n                            <Link to=\"/status/list\">\r\n                                <Icon type=\"area-chart\" style={iconStyle}/>Dashboard\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"about\" onClick={()=>this.props.setHeaderMenuItem('about')}>\r\n                            <Link to=\"/about\">\r\n                                <Icon type=\"info-circle\" style={iconStyle}/>About\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"source\">\r\n                            <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/danielc92/react-crypto-app\">\r\n                                <Icon theme=\"filled\" type=\"github\" style={iconStyle}/>Source\r\n                            </a>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.header_selected\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setHeaderMenuItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactHeader);\r\n","import React, { Component } from 'react';\r\nimport { Table, Tag, Layout, Typography } from 'antd';\r\nimport { contentStyle } from '../../styles';\r\nimport { connect } from 'react-redux';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nimport { fetchExchanges, setSiderMenuItem } from '../../redux_actions';\r\n\r\nconst { Content } = Layout;\r\nconst { Paragraph, Title } = Typography;\r\n\r\n\r\nclass ReactExchangesList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchExchanges()\r\n        this.props.setSiderMenuItem('exchanges-list')\r\n    }\r\n\r\n    render() {\r\n          const columns = [\r\n            {\r\n              title: 'Id',\r\n              dataIndex: 'id',\r\n              key: 'id',\r\n            },\r\n            {\r\n              title: 'Name',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n              render: country => (<Tag color=\"purple\">{country}</Tag>)\r\n            },\r\n            {\r\n                title: 'Year est.',\r\n                dataIndex: 'year_established',\r\n                key: 'year_established',\r\n              },\r\n              {\r\n                title: 'Country',\r\n                dataIndex: 'country',\r\n                key: 'country',\r\n                render: country => (<Tag color=\"blue\">{country}</Tag>)\r\n              },\r\n              {\r\n                title: 'Trade 24h BTC',\r\n                dataIndex: 'trade_volume_24h_btc',\r\n                key: 'trade_volume_24h_btc',\r\n              }\r\n            ];\r\n\r\n        const loading = this.props.data.length > 0 ? false : true;\r\n\r\n\r\n\r\n        return (\r\n          <React.Fragment>\r\n          <ReactSider/>\r\n            <Layout style={{ padding: '1rem' }}>\r\n                <Content style={contentStyle}>\r\n                    <Title level={2}>Exchanges List</Title>\r\n                    <Paragraph>This page lists available exchanges.</Paragraph>\r\n                    <Table\r\n                    bordered={true}\r\n                    loading={loading}\r\n                    dataSource={this.props.data} \r\n                    columns={columns} />\r\n                </Content>\r\n            </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      data: state.exchanges\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  fetchExchanges,\r\n  setSiderMenuItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactExchangesList);","//\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nimport { Layout, Typography, Table, Tag } from 'antd';\r\nimport { contentStyle } from '../../styles';\r\nimport { connect } from 'react-redux';\r\nimport { fetchExchangeRates, setSiderMenuItem } from '../../redux_actions';\r\n\r\n\r\nconst { Content } = Layout;\r\nconst { Title, Paragraph } = Typography;\r\n\r\n\r\nclass ReactExchangeRates extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchExchangeRates();\r\n        this.props.setSiderMenuItem('exchange-rates-list');\r\n    };\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            {\r\n              title: 'Name',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n              render: item => <Tag color=\"purple\">{ item }</Tag>\r\n            },\r\n            {\r\n                title: 'Unit',\r\n                dataIndex: 'unit',\r\n                key: 'unit'\r\n            },\r\n            {\r\n                title: 'Value',\r\n                dataIndex: 'value',\r\n                key: 'value',\r\n            },\r\n            {\r\n                title: 'Type',\r\n                dataIndex: 'type',\r\n                key: 'type',\r\n            }\r\n        ]\r\n\r\n        const loading = this.props.data.length > 0 ? false : true;\r\n        return (\r\n            <React.Fragment>\r\n                <ReactSider/>\r\n                <Layout style={{ padding: '1rem' }}>\r\n                    <Content className=\"text-focus-in\" style={{...contentStyle}}>\r\n                        <Title level={2}>Exchange Rates</Title>\r\n                        <Paragraph>View BTC-to-Currency exchange rates.</Paragraph>\r\n                        <Table\r\n                        dataSource={this.props.data}\r\n                        loading={loading}\r\n                        columns={columns}\r\n                        >\r\n                        </Table>\r\n                    </Content>\r\n                </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.exchange_rates\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchExchangeRates,\r\n    setSiderMenuItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactExchangeRates);\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport { footerStyle } from '../../styles';\r\n\r\nconst { Footer } = Layout;\r\n\r\nexport default function ReactFooter() {\r\n    return (\r\n        <Footer style={footerStyle}>\r\n            Developed by <strong>Daniel Corcoran</strong>.<br></br>Built with <strong>React</strong> and Ant Design UI.<br></br>Powered by <strong>CoinGecko</strong> API.</Footer>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Layout, Typography, Row, Col, List, Tag} from 'antd';\r\nimport { colStyle, contentStyle } from '../../styles';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStatusUpdates, setSiderMenuItem, setHeaderMenuItem} from '../../redux_actions';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nconst { Content } = Layout;\r\nconst { Title, Paragraph } = Typography;\r\n\r\nclass ReactStatusUpdates extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchStatusUpdates();\r\n        this.props.setSiderMenuItem('status-list');\r\n        this.props.setHeaderMenuItem('dashboard');\r\n    }\r\n\r\n    render() {\r\n        const loading = this.props.data.length > 0 ? false : true;\r\n        return (\r\n            <React.Fragment>\r\n                <ReactSider/>\r\n                <Layout style={{ padding: '1rem' }}>\r\n                <Content style={contentStyle}>\r\n                    <Title level={2}>Status Updates</Title>\r\n                    <Paragraph>This feature is currently in beta. List all status_updates with data (description, category, created_at, user, user_title and pin)</Paragraph>\r\n                    <Row gutter={16} style={{textAlign: 'center'}} type=\"flex\">\r\n\r\n                        <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <List\r\n                    pagination={!loading}\r\n                    loading={loading}\r\n                    itemLayout=\"vertical\"\r\n                    size=\"large\"\r\n                    dataSource={this.props.data}\r\n                    renderItem={item => (\r\n                    <List.Item\r\n                        key={item.project.name}\r\n                        extra={\r\n                        <img\r\n                            width={120}\r\n                            alt={item.project.name}\r\n                            src={item.project.image.large}\r\n                        />\r\n                        }\r\n                    >\r\n                        <List.Item.Meta\r\n                        title={item.project.name}\r\n                        description={`Posted by: ${item.user} - ${item.user_title} on ${item.created_at}`}\r\n                        />\r\n                        { item.description }\r\n                        <div style={{marginTop: '1rem'}} >\r\n                            <Tag color=\"orange\">{item.category}</Tag>\r\n                        </div>\r\n                        \r\n                    </List.Item>)}\r\n                ></List>\r\n                </Content>\r\n            </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.status_updates\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchStatusUpdates,\r\n    setSiderMenuItem,\r\n    setHeaderMenuItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactStatusUpdates)","import React, { Component } from 'react';\r\nimport ReactCoinsList from './Coins/ReactCoinsList';\r\nimport ReactCoinsDetail from './Coins/ReactCoinsDetail';\r\nimport ReactHome from './General/ReactHome';\r\nimport ReactAbout from './General/ReactAbout';\r\nimport ReactEvents from './Events/ReactEvents';\r\nimport ReactEmpty from './Empty/ReactEmpty';\r\nimport ReactGlobal from './Global/ReactGlobal';\r\nimport { Route } from 'react-router-dom';\r\nimport { Layout } from 'antd';\r\nimport ReactHeader from './Navigation/ReactHeader';\r\nimport ReactExchangesList from './Exchanges/ReactExchangesList';\r\nimport ReactExchangeRates from './ExchangeRates/ReactExchangeRates';\r\nimport ReactFooter from './Navigation/ReactFooter';\r\nimport './App.css'\r\nimport ReactStatusUpdates from './StatusUpdates/ReactStatusUpdates';\r\n\r\n//[NOTE] React prefix used with React.Components in order to differentiate from Ant Design UI components.\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <Layout style={{minHeight: '100vh', lineHeight: '1.6rem'}}>    \r\n                <ReactHeader/>\r\n                <Layout>\r\n                    <Route path='/' exact component={ReactHome}/>\r\n                    <Route path='/about' exact component={ReactAbout}/>\r\n                    <Route path='/coins' exact component={ReactCoinsList}/>\r\n                    <Route path='/coins/:coinId/' exact component={ReactCoinsDetail}/>\r\n                    <Route path='/exchanges/list' exact component={ReactExchangesList}/>\r\n                    <Route path='/global' exact component={ReactGlobal}/>\r\n                    <Route path='/empty' exact component={ReactEmpty}/>\r\n                    <Route path='/events/list' exact component={ReactEvents}/>\r\n                    <Route path='/exchange-rates' exact component={ReactExchangeRates}/>\r\n                    <Route path='/status/list' exact component={ReactStatusUpdates}/>\r\n                </Layout>\r\n                <ReactFooter/>\r\n            </Layout>\r\n        )\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { market_processed_table_keys } from '../constants';\r\n\r\n\r\nconst coinsReducer = (state=[], action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case 'GET_COINS':\r\n            return payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nconst compileMarketData = (marketData) => {\r\n\r\n    let data = {}\r\n\r\n    for (let market_index = 0; market_index < market_processed_table_keys.length; market_index++) {\r\n        let field = market_processed_table_keys[market_index]\r\n        let entries = Object.entries(marketData[field])\r\n        for (let i = 0; i < entries.length; i ++) {\r\n            let key = entries[i][0]\r\n            let value = entries[i][1]\r\n            if (Object.keys(data).includes(key)){\r\n                data[key] = { ...data[key], [field]: value, currency: key }\r\n            } else {\r\n                data[key] = { [field]: value, currency: key }\r\n            }   \r\n        }\r\n    }\r\n\r\n    return Object.values(data)\r\n\r\n} \r\n\r\nconst coinDetailsReducer = (state = {}, action) => {\r\n    const { type, payload } = action;\r\n    \r\n    switch(type) {\r\n        case 'GET_COIN_DETAILS':\r\n            const market_data_processed = compileMarketData(payload.market_data)\r\n            return {...payload, market_data_processed}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nconst globalReducer = (state={}, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case 'GET_GLOBAL':\r\n            return payload.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst exchangesReducer = (state=[], action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case 'GET_EXCHANGES':\r\n            return payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst exchangeRatesReducer = (state=[], action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case 'GET_EXCHANGE_RATES':\r\n            let rates = Object.values(payload.rates)\r\n            return rates\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst eventReducer = (state=[], action) => {\r\n    const { type, payload } = action;\r\n    \r\n    switch(type) {\r\n        case 'GET_EVENTS':\r\n            return payload.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst statusUpdatesReducer = (state=[], action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case 'GET_STATUS_UPDATES':\r\n            console.log(payload)\r\n            return payload.status_updates\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst headerMenuItemReducer = (state='', action) => {\r\n    const { type, payload } = action;\r\n    \r\n    switch(type) {\r\n        case 'SET_HEADER_MENU_ITEM':\r\n            return payload.item; \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst siderMenuItemReducer = (state='status-list', action) => {\r\n    const { type, payload } = action;\r\n    \r\n    switch(type) {\r\n        case 'SET_SIDER_MENU_ITEM':\r\n            return payload.item; \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n    events: eventReducer,\r\n    status_updates: statusUpdatesReducer,\r\n    global: globalReducer,\r\n    exchanges: exchangesReducer,\r\n    exchange_rates: exchangeRatesReducer,\r\n    coins: coinsReducer,\r\n    coin_details: coinDetailsReducer,\r\n    header_selected: headerMenuItemReducer,\r\n    sider_selected: siderMenuItemReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { rootReducer } from './redux_reducers/';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n// [NOTE] import antd css so that it becomes available for all components in App\r\nimport 'antd/dist/antd.css';\r\n// [NOTE] Wrap all components in a Router\r\nimport { HashRouter } from 'react-router-dom';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middlewares = compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\n\r\nconst store = createStore(rootReducer,\r\n    middlewares)\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </Provider>, \r\n    document.getElementById('root'))"],"sourceRoot":""}