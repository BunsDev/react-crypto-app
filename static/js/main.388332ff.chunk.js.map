{"version":3,"sources":["images/flaticon/001-bitcoin.svg","images/flaticon/004-exchange.svg","images/flaticon/001-chat.svg","images/flaticon/003-smartphone.svg","images/flaticon/005-idea.svg","images/flaticon/worldwide.svg","images/branding/CoinGecko.png","images/logo/logo.png","styles/index.js","components/Navigation/ReactSider.js","API/index.js","redux_actions/index.js","components/Coins/ReactCoinsList.js","components/Coins/ReactCoinScores.js","constants/index.js","ChartConfig/index.js","components/Coins/ReactCoinCommunityStats.js","components/Coins/ReactCoinDeveloperStats.js","components/Coins/ReactCoinMarketStats.js","components/Coins/ReactCoinMarketDetailedStats.js","components/Coins/ReactCoinDetailSummary.js","components/Coins/ReactCoinsDetail.js","components/General/ReactHome.js","components/General/ReactAbout.js","components/Events/ReactEvents.js","components/Empty/ReactEmpty.js","components/Global/ReactGlobal.js","components/Navigation/ReactHeader.js","components/Exchanges/ReactExchangesList.js","components/ExchangeRates/ReactExchangeRates.js","components/Navigation/ReactFooter.js","components/StatusUpdates/ReactStatusUpdates.js","components/App.js","redux_reducers/index.js","index.js"],"names":["module","exports","contentStyle","background","padding","margin","minHeight","cardStyle","height","colStyle","marginBottom","footerStyle","backgroundColor","color","textAlign","iconStyle","fontSize","titleStyle","marginTop","tableStyle","overflowX","Sider","Layout","SubMenu","Menu","ReactSider","Fragment","breakpoint","collapsedWidth","width","style","mode","selectedKeys","this","props","sider_selected","defaultOpenKeys","borderRight","key","title","type","Item","to","Component","connect","state","axios","create","baseURL","setHeaderMenuItem","item","payload","setSiderMenuItem","Content","Title","Typography","Paragraph","ReactCoinsList","searchText","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","confirm","clearFilters","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","handleSearch","display","onClick","icon","size","marginRight","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","highlightStyle","searchWords","autoEscape","textToHighlight","setState","fetchCoins","loading","data","length","columns","id","level","bordered","dataSource","mapActionsToProps","dispatch","getState","a","async","coinGecko","get","response","coins","ReactCoinScores","gutter","xs","sm","md","lg","xl","precision","community_score","coingecko_score","developer_score","liquitidy_score","market_cap_rank","coingecko_rank","market_processed_table_keys","market_stat_keys","responsive","scales","xAxes","gridLines","ticks","maxTicksLimit","yAxes","ReactCoinCommunityStats","Object","entries","map","index","ReactCoinDeveloperStats","ReactCoinMarketStats","market_data","ReactCoinMarketDetailedStats","rowKey","ReactCoinDetailSummary","name","image","last_updated","shape","src","large","ReactCoinsDetail","getChartData","colour","labels","Date","toLocaleString","datasets","label","coinId","match","params","fetchCoinDetails","fetchCoinMarketDetails","finalColumns","liquidity_score","community_data","developer_data","market_data_processed","keys","coinMarketKeys","chart_data","pricesLoading","marketCapsLoading","totalVolumesLoading","chartPricesData","chartMarketCapsData","chartTotalVolumesData","active","options","chartOptions","coin_details","coin_market_details","Meta","Card","features","svg","svg1","description","svgChat","svgExchangeRate","svgMobile","svgUpdate","svgWorldwide","ReactHome","border","cover","alt","maxWidth","ReactAbout","className","rel","href","coinGeckoLogo","renderItem","c","pagination","version","purpose","ReactEvents","fetchEvents","itemLayout","extra","screenshot","website","venue","slice","country","dot","fontWeight","start_date","end_date","events","ReactEmpty","ReactGlobal","fetchGlobal","active_cryptocurrencies","market_cap_change_percentage_24h_usd","ongoing_icos","upcoming_icos","ended_icos","markets","suffix","global","Header","ReactHeader","selected","theme","lineHeight","maxHeight","logoImage","header_selected","ReactExchangesList","fetchExchanges","exchanges","ReactExchangeRates","fetchExchangeRates","exchange_rates","Footer","ReactFooter","ReactStatusUpdates","fetchStatusUpdates","project","user","user_title","created_at","category","status_updates","App","path","exact","component","compileMarketData","marketData","market_index","field","i","values","rootReducer","combineReducers","action","rates","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.388332ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/001-bitcoin.4522051b.svg\";","module.exports = __webpack_public_path__ + \"static/media/004-exchange.07044d49.svg\";","module.exports = __webpack_public_path__ + \"static/media/001-chat.9778fdd3.svg\";","module.exports = __webpack_public_path__ + \"static/media/003-smartphone.ee821675.svg\";","module.exports = __webpack_public_path__ + \"static/media/005-idea.6f959824.svg\";","module.exports = __webpack_public_path__ + \"static/media/worldwide.2769477c.svg\";","module.exports = __webpack_public_path__ + \"static/media/CoinGecko.896961f6.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ff4e6e19.png\";","import { AutoComplete } from \"antd\";\r\n\r\nexport const contentStyle = {\r\n    background: '#ffffff',\r\n    padding: '2rem',\r\n    margin: 0,\r\n    minHeight: 700,\r\n}\r\n\r\nexport const cardStyle = {\r\n    height: '100%'\r\n};\r\n\r\nexport const colStyle = {\r\n    marginBottom: '1rem'\r\n};\r\n\r\nexport const footerStyle = {\r\n    backgroundColor: '#031529', \r\n    color:'white', \r\n    textAlign: 'center'\r\n}\r\n\r\nexport const iconStyle = {\r\n    fontSize: '1.25rem'\r\n}\r\n\r\nexport const titleStyle = {\r\n    marginTop: '3rem'\r\n}\r\n\r\nexport const tableStyle = {\r\n    overflowX: 'auto'\r\n}","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { iconStyle } from '../../styles';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Sider } = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\nclass ReactSider extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Sider \r\n                breakpoint=\"md\"\r\n                collapsedWidth=\"0\"\r\n                width={240} \r\n                style={{ background: '#fff' }}>\r\n                    <Menu\r\n                    mode=\"inline\"\r\n                    selectedKeys={[this.props.sider_selected]}\r\n                    defaultOpenKeys={['menu-exchange-rates', 'menu-updates', 'menu-coins', 'menu-events', 'menu-global', 'menu-exchanges']}\r\n                    style={{ height: '100%', borderRight: 0 }}\r\n                    >\r\n                    {/* Status updates */}\r\n                    <SubMenu\r\n                        key=\"menu-updates\"\r\n                        title={\r\n                        <span>\r\n                            <Icon type=\"alert\" style={iconStyle}/>Updates\r\n                        </span>\r\n                        }\r\n                        >\r\n                        <Menu.Item key=\"status-list\"><Link to='/status/list'>Updates Listing</Link></Menu.Item>\r\n                    </SubMenu>\r\n                   {/* Coin Sub Menu */}\r\n                    <SubMenu\r\n                        key=\"menu-coins\"\r\n                        title={\r\n                        <span>\r\n                            <Icon type=\"dollar\" style={iconStyle}/>Coins\r\n                        </span>\r\n                        }\r\n                        >\r\n                        <Menu.Item key=\"coin-list\"><Link to='/coins'>Coin Listing</Link></Menu.Item>\r\n                        <Menu.Item key=\"coin-detail\"><Link to='/coins/bitcoin'>Coin Detail View</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    \r\n                    {/* Events Sub Menu */}\r\n                    <SubMenu\r\n                        key=\"menu-events\"\r\n                        title={\r\n                        <span>\r\n                            <Icon type=\"team\" style={iconStyle}/>Events\r\n                        </span>\r\n                        }\r\n                        >\r\n                        <Menu.Item key=\"events-list\"><Link to='/events/list'>Events Listing</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    \r\n                    {/* Exchanges Menu */}\r\n                    <SubMenu\r\n                    key=\"menu-exchanges\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"bank\" style={iconStyle}/>\r\n                            Exchanges\r\n                        </span>\r\n                        }>\r\n                    <Menu.Item key=\"exchanges-list\"><Link to='/exchanges/list'>Exchanges Listing</Link></Menu.Item>\r\n                    </SubMenu>\r\n\r\n                    {/* Exchange Rates Menu */}\r\n                    <SubMenu\r\n                    key=\"menu-exchange-rates\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"dollar\" style={iconStyle}/>\r\n                            Exchange Rates\r\n                        </span>\r\n                        }>\r\n                    <Menu.Item key=\"exchange-rates-list\"><Link to='/exchange-rates'>Exchange Rates Listing</Link></Menu.Item>\r\n                    </SubMenu>\r\n\r\n\r\n                    {/* Global Sub Menu */}\r\n                    <SubMenu\r\n                        key=\"menu-global\"\r\n                        title={\r\n                        <span>\r\n                            <Icon type=\"global\" style={iconStyle}/>\r\n                            Global\r\n                        </span>\r\n                        }\r\n                    >\r\n                        <Menu.Item key=\"global-main\"><Link to='/global'>Data</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    </Menu>\r\n                </Sider>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sider_selected: state.sider_selected\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(ReactSider)\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.coingecko.com/api/v3'\r\n})","import coinGecko from '../API';\r\nexport const GET_COIN_LIST = 'GET_COIN_LIST';\r\nexport const GET_COIN_DETAILS = 'GET_COIN_DETAILS';\r\nexport const GET_COIN_CHART = 'GET_COIN_CHART';\r\nexport const GET_EVENT_LIST = 'GET_EVENT_LIST';\r\nexport const GET_EXCHANGE_RATES = 'GET_EXCHANGE_RATES';\r\nexport const GET_EXCHANGES_LIST = 'GET_EXCHANGES_LIST';\r\nexport const GET_GLOBAL = 'GET_GLOBAL';\r\nexport const SET_HEADER_MENU_ITEM = 'SET_HEADER_MENU_ITEM';\r\nexport const SET_SIDER_MENU_ITEM = 'SET_SIDER_MENU_ITEM'\r\nexport const GET_STATUS_UPDATES = 'GET_STATUS_UPDATES';\r\n\r\n\r\nexport const fetchCoins = () => async (dispatch, getState ) => {\r\n    const response = await coinGecko.get('/coins/list')\r\n    dispatch({\r\n        type: GET_COIN_LIST,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchCoinDetails = (coinId) => async (dispatch, getState) => {\r\n    const response = await coinGecko.get(`coins/${coinId}?localization=false&tickers=false&market_data=true&community_data=true&sparkline=false&developer_data=true`);\r\n    dispatch({\r\n        type: GET_COIN_DETAILS,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchCoinMarketDetails = (coinId) => async (dispatch, getState) => {\r\n    const response = await coinGecko.get(`coins/${coinId}/market_chart?vs_currency=usd&days=7`);\r\n    dispatch({\r\n        type: GET_COIN_CHART,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\n\r\nexport const fetchEvents = () => async (dispatch, getState ) => {\r\n    const response = await coinGecko.get('/events')\r\n    dispatch({\r\n        type: GET_EVENT_LIST,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchExchangeRates = () => async (dispatch, getState ) => {\r\n    const response = await coinGecko.get('/exchange_rates')\r\n    dispatch({\r\n        type: GET_EXCHANGE_RATES,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchExchanges = () => async (dispatch, getState ) => {\r\n    const response = await coinGecko.get('/exchanges')\r\n    dispatch({\r\n        type: GET_EXCHANGES_LIST,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchStatusUpdates = () => async (dispatch, getState ) => {\r\n    const response = await coinGecko.get('/status_updates')\r\n    dispatch({\r\n        type: GET_STATUS_UPDATES,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchGlobal = () => async (dispatch, getState) => {\r\n    const response = await coinGecko.get('/global')\r\n    dispatch({\r\n        type: GET_GLOBAL,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const setHeaderMenuItem = (item) => {\r\n    return {\r\n        type: SET_HEADER_MENU_ITEM,\r\n        payload: { item }\r\n    }\r\n}\r\n\r\nexport const setSiderMenuItem = (item) => {\r\n    return {\r\n        type: SET_SIDER_MENU_ITEM,\r\n        payload: { item }\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nimport { Link } from 'react-router-dom';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { fetchCoins, setSiderMenuItem } from '../../redux_actions';\r\nimport { connect } from 'react-redux';\r\nimport { Layout, Table, Typography, Button, Tag, Input, Icon } from 'antd';\r\nimport { contentStyle, tableStyle } from '../../styles';\r\nconst { Content } = Layout;\r\nconst { Title, Paragraph } = Typography;\r\n\r\n\r\nclass ReactCoinsList extends Component {\r\n\r\n    state = {\r\n        searchText: ''\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n            <Input\r\n                ref={node => {\r\n                this.searchInput = node;\r\n                }}\r\n                placeholder={`Search ${dataIndex}`}\r\n                value={selectedKeys[0]}\r\n                onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n                style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n                icon=\"search\"\r\n                size=\"small\"\r\n                style={{ width: 90, marginRight: 8 }}\r\n            >\r\n                Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                Reset\r\n            </Button>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n            <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n            }\r\n        },\r\n        render: text => (\r\n            <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n            />\r\n        ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n    };\r\n    \r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    componentDidMount () {\r\n        this.props.fetchCoins();\r\n        this.props.setSiderMenuItem('coin-list');\r\n    }\r\n\r\n    render() {\r\n        const loading = this.props.data.length > 0 ? false: true;\r\n\r\n        const columns=[\r\n            {\r\n                title:'Id',\r\n                dataIndex:'id',\r\n                key:'id',\r\n                ...this.getColumnSearchProps('id')\r\n            },\r\n            {\r\n                title:'Symbol',\r\n                dataIndex:'symbol',\r\n                key:'symbol',\r\n                ...this.getColumnSearchProps('symbol')\r\n            },\r\n            {\r\n                title:'Name',\r\n                dataIndex:'name',\r\n                key:'name',\r\n                ...this.getColumnSearchProps('name'),\r\n                render: item => <Tag color=\"purple\">{item}</Tag>\r\n            },\r\n            {\r\n                title:'View Details',\r\n                dataIndex:'id',\r\n                key:'id',\r\n                render: id => (<Button type=\"primary\"><Link to={`/coins/${id}`}>View</Link></Button>)\r\n            }\r\n        ];\r\n        return (\r\n            <React.Fragment>\r\n                <ReactSider/>\r\n                <Layout style={{ padding: '1rem' }}>\r\n                    <Content style={contentStyle}>\r\n                        <Title level={2}>Coins List</Title>\r\n                        <Paragraph>This page lists cryptocurrencies available through the CoinGecko API. To view details of a given coin, click 'View' button. You can also filter by Id, Symbol or Name to drill down and find a coin.</Paragraph>\r\n                        <Table \r\n                        style={tableStyle}\r\n                        bordered={true}\r\n                        loading={loading} \r\n                        dataSource={this.props.data} \r\n                        columns={columns}/>\r\n                    </Content>\r\n                </Layout>\r\n            </React.Fragment>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.coins\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = { fetchCoins, setSiderMenuItem\r\n }\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactCoinsList);\r\n","import React from 'react'\r\nimport { Row, Col, Card, Statistic } from 'antd';\r\nimport { cardStyle, colStyle } from '../../styles';\r\nimport { Typography } from 'antd'\r\n\r\nexport default function ReactCoinScores(props) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography.Title \r\n            level={3} \r\n            style={{marginTop: '3rem'}}>\r\n                Scores and Ranks\r\n            </Typography.Title>\r\n            <Row gutter={16} style={{textAlign: 'center'}} type=\"flex\">\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                    <Card style={cardStyle}>\r\n                        <Statistic precision={1} title=\"community_score\" value={props.community_score}/>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                    <Card style={cardStyle}>\r\n                        <Statistic precision={1} title=\"coingecko_score\" value={props.coingecko_score}/>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                    <Card style={cardStyle}>\r\n                        <Statistic precision={1} title=\"developer_score\" value={props.developer_score}/>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                    <Card style={cardStyle}>\r\n                        <Statistic title=\"liquitidy_score\" value={props.liquitidy_score}/>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                    <Card style={cardStyle}>\r\n                        <Statistic title=\"market_cap_rank\" value={props.market_cap_rank}/>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                    <Card style={cardStyle}>\r\n                        <Statistic title=\"coingecko_rank\" value={props.coingecko_rank}/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","export const market_processed_table_keys = [\"ath\"\r\n,\"ath_change_percentage\"\r\n,\"current_price\"\r\n,\"high_24h\"\r\n,\"low_24h\"\r\n,\"market_cap\"\r\n,\"price_change_percentage_7d_in_currency\"\r\n,\"price_change_percentage_30d_in_currency\"\r\n,\"total_volume\"]\r\n\r\nexport const market_stat_keys = [\"circulating_supply\",\r\n\"total_supply\",\r\n\"public_interest_score\",\r\n\"market_cap_change_24h\",\r\n\"market_cap_change_percentage_24h\",\r\n\"price_change_percentage_14d\",\r\n\"price_change_percentage_1y\",\r\n\"price_change_percentage_200d\",\r\n\"price_change_percentage_24h\",\r\n\"price_change_percentage_30d\",\r\n\"price_change_percentage_60d\",\r\n\"price_change_percentage_7d\"\r\n]  ","export default {\r\n    responsive: true,\r\n    scales: {\r\n        xAxes: [{\r\n            gridLines: {\r\n                display:false\r\n            },\r\n            ticks: {\r\n                maxTicksLimit: 7\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            gridLines: {\r\n                display:false\r\n            },\r\n            ticks: {\r\n                maxTicksLimit: 5\r\n            }\r\n        }]\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Row, Card, Statistic,Col,Typography } from 'antd';\r\nimport { colStyle, cardStyle, titleStyle } from '../../styles';\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\n\r\nexport default class ReactCoinCommunityStats extends Component {\r\n    render() {\r\n        const { data } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Title level={3} style={titleStyle}>\r\n                    Community Stats\r\n                </Title>\r\n\r\n                <Row gutter={16} style={{textAlign: 'center'}} type=\"flex\">\r\n                    { Object.entries(data).map((item, index) => {\r\n                        if (typeof item[1] !== 'object') {\r\n                            return (\r\n                            <Col key={index}  xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle}>\r\n                                    <Statistic precision={1} title={item[0]} value={item[1]}/>\r\n                                </Card>\r\n                            </Col>\r\n                            )\r\n                        }\r\n                    })}\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Card, Statistic,Col,Typography } from 'antd';\r\nimport { colStyle, cardStyle, titleStyle } from '../../styles';\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default class ReactCoinDeveloperStats extends Component {\r\n    render() {\r\n        const { data} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Title level={3} style={titleStyle}>\r\n                    Developer Stats\r\n                </Title>\r\n\r\n                <Row gutter={16} style={{textAlign: 'center'}} type=\"flex\">\r\n                    { Object.entries(data).map((item, index) => {\r\n                        if (typeof item[1] !== 'object') {\r\n                            return (\r\n                            <Col key={index} xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle}>\r\n                                    <Statistic precision={1} title={item[0]} value={item[1]}/>\r\n                                </Card>\r\n                            </Col>\r\n                            )\r\n                        }\r\n                    })}\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Row, Card, Statistic,Col,Typography } from 'antd';\r\nimport { colStyle, cardStyle, titleStyle } from '../../styles';\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default class ReactCoinMarketStats extends Component {\r\n    render() {\r\n        \r\n        const { market_stat_keys, market_data } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Title level={3} style={titleStyle}>\r\n                    Market Stats\r\n                </Title>\r\n                <Row gutter={16} style={{textAlign: 'center'}} type=\"flex\">\r\n                    {\r\n                        market_stat_keys.map((key, index) => (\r\n                            <Col key={index} xs={24} sm={24} md={12} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle}>\r\n                                    <Statistic precision={1} title={key} value={market_data[key]}/>\r\n                                </Card>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Table, Typography } from 'antd';\r\nimport { titleStyle, tableStyle } from '../../styles';\r\n\r\nconst { Title } = Typography;\r\n\r\n\r\nexport default class ReactCoinMarketDetailedStats extends Component {\r\n    render() {\r\n        const { data, columns } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Title level={3} style={titleStyle}>Market Data (detailed)</Title>\r\n                <Table \r\n                style={tableStyle}\r\n                rowKey = \"currency\"\r\n                bordered \r\n                dataSource={data} \r\n                columns={columns}>\r\n                </Table>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Typography, Tag, Icon, Button, Avatar } from 'antd';\r\nconst { Title, Paragraph } = Typography;\r\n\r\n\r\nexport default class ReactCoinDetailSummary extends Component {\r\n    render() {\r\n        const { name, image, last_updated } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Title level={2}>\r\n                    <Avatar \r\n                    shape=\"square\" \r\n                    size=\"large\" \r\n                    src={ image.large }\r\n                    style={{marginRight:'1rem'}}/>\r\n                    { name }\r\n                </Title>\r\n\r\n                <Paragraph>Last updated on <Tag color=\"green\">{ last_updated }</Tag></Paragraph>\r\n\r\n                <Button style={{marginBottom: '1rem'}}>\r\n                    <Icon type=\"left\" />\r\n                    <Link to='/coins'>Back to coins list</Link>\r\n                </Button>\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCoinDetails, setSiderMenuItem, fetchCoinMarketDetails } from '../../redux_actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Tag, Icon, Skeleton, Button, Typography, Avatar } from 'antd';\r\nimport { contentStyle, titleStyle } from '../../styles';\r\nimport ReactCoinScores from './ReactCoinScores';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { market_processed_table_keys, market_stat_keys } from '../../constants';\r\nimport chartOptions from '../../ChartConfig';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nimport ReactCoinCommunityStats from './ReactCoinCommunityStats';\r\nimport ReactCoinDeveloperStats from './ReactCoinDeveloperStats';\r\nimport ReactCoinMarketStats from './ReactCoinMarketStats';\r\nimport ReactCoinMarketDetailedStats from './ReactCoinMarketDetailedStats';\r\nimport ReactCoinDetailSummary from './ReactCoinDetailSummary';\r\n\r\n\r\nconst { Content } = Layout;\r\nconst { Title, Paragraph } = Typography;\r\n\r\n\r\nclass ReactCoinsDetail extends Component {\r\n\r\n    componentDidMount() {\r\n        const { coinId } = this.props.match.params;\r\n        this.props.fetchCoinDetails(coinId);\r\n        this.props.fetchCoinMarketDetails(coinId);\r\n        this.props.setSiderMenuItem('coin-detail');\r\n    }\r\n\r\n    // helper function to generate chart data from props\r\n    getChartData = (loading, data, key, title, colour) => {\r\n        return {\r\n            labels: !loading ? data[key].map(item => new Date(item[0]).toLocaleString()) : [],\r\n            datasets: [\r\n                {\r\n                    label: title,\r\n                    data: !loading ? data[key].map(item => item[1]) : [],\r\n                    backgroundColor: colour\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let finalColumns = [\r\n            {\r\n                title:'currency', \r\n                key: 'currency', \r\n                dataIndex: 'currency', \r\n                render: item=> <Tag color=\"purple\">{item}</Tag>}, ...market_processed_table_keys.map(item => ({title: item, key: item, dataIndex: item\r\n                }))\r\n            ]\r\n\r\n        const { coingecko_rank } = this.props.data;\r\n        const { market_cap_rank } = this.props.data;\r\n        const { developer_score } = this.props.data;\r\n        const { community_score } = this.props.data;\r\n        const { liquidity_score } = this.props.data;\r\n        const { coingecko_score } = this.props.data;\r\n\r\n        const { community_data, developer_data } = this.props.data;\r\n\r\n        const { market_data, market_data_processed } = this.props.data;\r\n        const { last_updated, name, image } = this.props.data; \r\n        \r\n        const loading = Object.keys(this.props.data).length > 0 ? false : true;\r\n        const coinMarketKeys = Object.keys(this.props.chart_data);\r\n        const pricesLoading = coinMarketKeys.includes('prices') ? false : true;\r\n        const marketCapsLoading = coinMarketKeys.includes('market_caps') ? false : true;\r\n        const totalVolumesLoading = coinMarketKeys.includes('total_volumes') ? false : true;\r\n        \r\n        \r\n        // Generate chart data for Chart.js \r\n        const { chart_data } = this.props;\r\n        const chartPricesData = this.getChartData(pricesLoading, \r\n            chart_data, \r\n            'prices', \r\n            'Prices 7 Day', \r\n            'rgba(55, 144, 255, 0.7)')\r\n        const chartMarketCapsData = this.getChartData(marketCapsLoading, \r\n            chart_data, \r\n            'market_caps',\r\n            'Market Caps 7 Day', \r\n            'rgba(114, 17, 198, 0.7)')\r\n        const chartTotalVolumesData = this.getChartData(totalVolumesLoading, \r\n            chart_data, \r\n            'total_volumes', \r\n            'Total Volumes 7 Day', \r\n            'rgba(26, 201, 166, 0.7)')\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ReactSider/>\r\n                <Layout style={{ padding: '1rem' }}>\r\n                    <Content style={contentStyle}>\r\n                        { \r\n                            loading ?\r\n                            <React.Fragment>\r\n                                <Skeleton active/>\r\n                                <Skeleton active/>\r\n                                <Skeleton active/>\r\n                                <Skeleton active/>\r\n                            </React.Fragment> \r\n                                :\r\n                            <React.Fragment>\r\n                                \r\n                                <ReactCoinDetailSummary\r\n                                name={ name }\r\n                                last_updated = { last_updated }\r\n                                image={ image }/>\r\n                                \r\n                                <ReactCoinScores\r\n                                coingecko_rank={coingecko_rank}\r\n                                market_cap_rank={market_cap_rank}\r\n                                developer_score={developer_score}\r\n                                community_score={community_score}\r\n                                liquidity_score={liquidity_score}\r\n                                coingecko_score={coingecko_score}/>\r\n                                \r\n                                <ReactCoinMarketStats \r\n                                market_data={market_data} \r\n                                market_stat_keys={market_stat_keys}/>\r\n                                \r\n                                <ReactCoinMarketDetailedStats \r\n                                data={market_data_processed} \r\n                                columns={finalColumns}/>\r\n\r\n                                <ReactCoinCommunityStats\r\n                                data={community_data}/>\r\n\r\n                                <ReactCoinDeveloperStats \r\n                                data={developer_data}/>\r\n\r\n                                <Title level={3} style={titleStyle}>Prices Chart</Title>\r\n                                <Paragraph>Prices in USD for the past 7 days. Datetimes are converted from unix to locale.</Paragraph>\r\n                                <Line data={chartPricesData} options={chartOptions}/>\r\n\r\n                                <Title level={3} style={titleStyle}>Market Caps Chart</Title>\r\n                                <Paragraph>Market cap data from the past 7 days. Datetimes are converted from unix to locale.</Paragraph>\r\n                                <Line data={chartMarketCapsData} options={chartOptions}/>\r\n\r\n                                <Title level={3} style={titleStyle}>Total Volumes Chart</Title>\r\n                                <Paragraph>Total Volumes data from the past 7 days. Datetimes are converted from unix to locale.</Paragraph>\r\n                                <Line data={chartTotalVolumesData} options={chartOptions}/>\r\n                            </React.Fragment>\r\n                        }                    \r\n                    </Content>\r\n                </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.coin_details,\r\n        chart_data: state.coin_market_details\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = { \r\n    fetchCoinDetails, \r\n    fetchCoinMarketDetails,\r\n    setSiderMenuItem }\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactCoinsDetail)\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Typography, Card, Row, Col } from \"antd\";\r\nimport { contentStyle } from \"../../styles\";\r\nimport svg1 from \"../../images/flaticon/001-bitcoin.svg\";\r\nimport svgExchangeRate from \"../../images/flaticon/004-exchange.svg\";\r\nimport svgChat from \"../../images/flaticon/001-chat.svg\";\r\nimport svgMobile from \"../../images/flaticon/003-smartphone.svg\";\r\nimport svgUpdate from \"../../images/flaticon/005-idea.svg\";\r\nimport svgWorldwide from \"../../images/flaticon/worldwide.svg\";\r\nimport { colStyle } from \"../../styles\";\r\nimport { connect } from 'react-redux';\r\nimport { setHeaderMenuItem } from '../../redux_actions';\r\n\r\n\r\nconst { Content } = Layout;\r\nconst { Meta } = Card;\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst features = [\r\n  {\r\n    svg: svg1,\r\n    title: \"Statistics\",\r\n    description:\r\n      \"Statistics and charts are available in real-time.\"\r\n  },\r\n  {\r\n    svg: svgChat,\r\n    title: \"Community\",\r\n    description:\r\n      \"Be informed about upcoming cryptocurrency events in your area.\"\r\n  },\r\n  {\r\n    svg: svgExchangeRate,\r\n    title: \"Exchange Rates\",\r\n    description:\r\n      \"View up to date exchange rates for your favourite cryptocurrencies.\"\r\n  },\r\n  {\r\n    svg: svgMobile,\r\n    title: \"Mobile Friendly\",\r\n    description:\r\n      \"This site aims to be mobile friendly. View website on any device you like.\"\r\n  },\r\n  {\r\n    svg: svgUpdate,\r\n    title: \"Updates\",\r\n    description: \"App is continuously updated with the latest data, reflecting coingecko API.\"\r\n  },\r\n  {\r\n    svg: svgWorldwide,\r\n    title: \"Global\",\r\n    description: \"Data availability on a global scale\"\r\n  }\r\n];\r\n\r\nclass ReactHome extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.setHeaderMenuItem('home')\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{ padding: \"1rem\" }}>\r\n        <Content style={contentStyle}>\r\n          <Title level={2}>Crypto</Title>\r\n          <Paragraph>\r\n            Bringing you cryptocurrency related data in a user friendly,\r\n            digestible dashboard platform.\r\n          </Paragraph>\r\n\r\n          <Title level={3}>Features</Title>\r\n\r\n          <Row gutter={16} style={{ textAlign: \"center\" }} type=\"flex\">\r\n            {features.map((item, index) => (\r\n              <Col\r\n                key={index}\r\n                xs={24}\r\n                sm={24}\r\n                md={8}\r\n                lg={8}\r\n                xl={8}\r\n                style={colStyle}\r\n              >\r\n                <Card\r\n                  style={{ border: \"none\" }}\r\n                  cover={\r\n                    <img\r\n                      alt=\"Home page crypto svg\"\r\n                      style={{\r\n                        padding: \"2rem\",\r\n                        maxWidth: \"160px\",\r\n                        margin: \"auto\"\r\n                      }}\r\n                      src={item.svg}\r\n                    />\r\n                  }\r\n                >\r\n                  <Meta title={item.title} description={item.description} />\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paragraph>Icons provided by flaticon.</Paragraph>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  setHeaderMenuItem\r\n}\r\n\r\nexport default connect(null, mapActionsToProps)(ReactHome);\r\n","import React, { Component } from 'react';\r\nimport { Layout, List, Tag, Typography, Table } from 'antd';\r\nimport { contentStyle } from '../../styles';\r\nimport coinGeckoLogo from '../../images/branding/CoinGecko.png';\r\nimport {connect} from 'react-redux';\r\nimport { setHeaderMenuItem } from '../../redux_actions';\r\nconst { Content } = Layout;\r\nconst { Title, Paragraph } = Typography;\r\n\r\n\r\nclass ReactAbout extends Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.setHeaderMenuItem('about')\r\n    }\r\n\r\n    render() {\r\n\r\n        const packages = [\r\n            {\r\n                name: 'antd',\r\n                version: '^3.20.6',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'gh-pages',\r\n                version: '^2.0.1',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'react',\r\n                version: '^16.8.6',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'react-dom',\r\n                version: '^16.8.6',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'react-router-dom',\r\n                version: '^5.0.1',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'react-scripts',\r\n                version: '3.0.1',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'react-chartjs-2',\r\n                version: '^2.7.6',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'axios',\r\n                version :'^0.19.0',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'redux-thunk',\r\n                version :'^2.3.0',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'redux',\r\n                version :'^4.0.4',\r\n                purpose: ''\r\n            },\r\n            {\r\n                name: 'react-redux',\r\n                version: '^7.1.0',\r\n                purpose: ''\r\n            }\r\n            ];\r\n\r\n            const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: 'Version',\r\n                dataIndex: 'version',\r\n                key: 'version',\r\n                render: item => <Tag color=\"green\">{item}</Tag>\r\n            }];\r\n            \r\n            const challenges = [\r\n                'Organizing large amounts of data from third party API.'\r\n                ,'Complex routing within nested components.'\r\n                ,'Restructuring data from API calls into a suitable format for UI components.'\r\n                ,'Creating maintainable structure for components and resusable configurations.'\r\n                ,'Learning to use a brand new UI framework (Ant Design UI).'\r\n            ]\r\n\r\n        return (\r\n            <Layout style={{ padding: '1rem' }}>\r\n                <Content className=\"text-focus-in\" style={{...contentStyle}}>\r\n                    <Title level={2}>About Page</Title>\r\n                    <Paragraph>Consolidating RESTFUL calls from the CoinGecko API into a React application. I'll be using v3 of the API (the most recent version at the time of starting this project) This app will be using ant design for UI. </Paragraph>\r\n                    \r\n                    \r\n                    <Title level={3}>Purpose</Title>\r\n                    <Paragraph>This project was built in order to further learning and development of React applications, especially those involving connecting to third party APIs.</Paragraph>\r\n                    \r\n                    <Title level={3}>Data source</Title>\r\n                    <Paragraph>All the data which this application ingests and displays is processed from the CoinGecko API. A free and publicly available cryptocurrency api. Click below to visit CoinGecko official website.</Paragraph>\r\n                    \r\n                        <a \r\n                        rel=\"noopener noreferrer\" \r\n                        target=\"_blank\" \r\n                        href=\"https://www.coingecko.com/en/api#\">\r\n                        <img \r\n                        className=\"responsive-image\"\r\n                        alt=\"coingecko api link\"\r\n                        style={{border: '1px solid #f3f3f3', maxWidth: '400px'}} \r\n                        src={coinGeckoLogo}>\r\n                        </img>\r\n                    </a>\r\n                    <Paragraph/>\r\n\r\n                    <Title level={3}>Challenges</Title>\r\n                    <Paragraph>Building this application posed some challenges;</Paragraph>\r\n                    <List\r\n                    style={{marginBottom: '2rem'}}\r\n                    size=\"medium\"\r\n                    bordered\r\n                    dataSource={challenges}\r\n                    renderItem={c => <List.Item>{c}</List.Item>}\r\n                    />\r\n\r\n                    <Title level={3}>Packages used in this project:</Title>\r\n                    <Paragraph>The following packages were installed via <strong>npm</strong></Paragraph>\r\n                    \r\n                    <Table\r\n                    bordered\r\n                    pagination={false} \r\n                    dataSource={packages} \r\n                    columns={columns}></Table>\r\n                    \r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setHeaderMenuItem\r\n}\r\n\r\nexport default connect(null, mapActionsToProps)(ReactAbout);\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Layout, List, Tag, Timeline, Typography, Icon } from 'antd';\r\nimport { contentStyle } from '../../styles';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nimport { fetchEvents, setSiderMenuItem } from '../../redux_actions';\r\nimport { connect } from 'react-redux';\r\nconst { Title, Paragraph } = Typography;\r\nconst { Content } = Layout;\r\n\r\nclass ReactEvents extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchEvents()\r\n        this.props.setSiderMenuItem('events-list')\r\n    }\r\n\r\n    render() {\r\n        const loading = this.props.data.length > 0 ? false : true;\r\n        return (\r\n            <React.Fragment>\r\n                <ReactSider/>\r\n                <Layout style={{ padding: '1rem' }}>\r\n                <Content style={contentStyle}>\r\n                    <Title level={2}>Events</Title>\r\n                    <Paragraph>This page shows cryptocurrency related events around the globe...</Paragraph>\r\n\r\n                    <List\r\n                    loading={loading}\r\n                    itemLayout=\"vertical\"\r\n                    size=\"large\"\r\n                    dataSource={this.props.data}\r\n                    renderItem={item => (\r\n                    <List.Item\r\n                        key={item.title}\r\n                        extra={\r\n                        <img\r\n                            className=\"responsive-image\"\r\n                            style={{maxWidth: '400px'}}\r\n                            alt={item.title}\r\n                            src={item.screenshot}\r\n                        />\r\n                        }\r\n                    >\r\n                        <List.Item.Meta\r\n                        title={<a href={item.website}>{item.title}</a>}\r\n                        description={item.venue}\r\n                        />\r\n                        {item.description.slice(0, 500)}...\r\n\r\n                        <div style={{margin: '1.5rem 0rem'}} >\r\n                            <Tag color=\"blue\">Type: {item.type}</Tag>\r\n                            <Tag color=\"blue\">Location: {item.country}</Tag>\r\n                        </div>\r\n\r\n                        <Timeline>\r\n                            <Timeline.Item \r\n                            color=\"blue\"\r\n                            dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />}>Event starts on <span style={{fontWeight: 500}}>{ item.start_date }</span>\r\n                            </Timeline.Item>\r\n                            <Timeline.Item \r\n                            color=\"red\"\r\n                            dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />}>Event ends on <span style={{fontWeight: 500}}>{ item.end_date }</span>\r\n                            </Timeline.Item>\r\n                        </Timeline>\r\n                        \r\n                    </List.Item>\r\n                    )}\r\n                />\r\n                </Content>\r\n            </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.events\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchEvents, \r\n    setSiderMenuItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactEvents);\r\n","import React, { Component } from 'react';\r\nimport { Layout, Typography, Empty } from 'antd';\r\nimport { contentStyle } from '../../styles';\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\n\r\nexport default class ReactEmpty extends Component {\r\n    render() {\r\n        return (\r\n            <Layout style={{ padding: '1rem' }}>\r\n                <Content className=\"text-focus-in\" style={contentStyle}>\r\n                    <Title level={2}>In development</Title>\r\n                    <Empty description=\"This page is currently in development. Please check on it at a later time...\"></Empty>\r\n                </Content>\r\n            </Layout>        \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchGlobal, setSiderMenuItem } from '../../redux_actions';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nimport { Col, Statistic, Card, Row, Layout, Typography } from 'antd';\r\nimport { contentStyle, colStyle, cardStyle } from '../../styles';\r\n\r\n\r\nconst { Content } = Layout;\r\nconst { Paragraph, Title } = Typography;\r\n\r\nclass ReactGlobal extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchGlobal();\r\n        this.props.setSiderMenuItem('global-main');\r\n    }\r\n\r\n    render() {\r\n        const loading = Object.keys(this.props.data).length > 0 ? false : true;\r\n        const {\r\n            active_cryptocurrencies, \r\n            market_cap_change_percentage_24h_usd,\r\n            ongoing_icos, \r\n            upcoming_icos, \r\n            ended_icos, \r\n            markets} = this.props.data\r\n        return (\r\n            <React.Fragment>\r\n                <ReactSider/>\r\n                <Layout style={{ padding: '1rem' }}>\r\n                    <Content style={contentStyle}>\r\n                        <Title level={2}>Global Data</Title>\r\n                        <Paragraph>This page lists global data attributes and values.</Paragraph>\r\n                        <Row gutter={16} style={{textAlign: 'center'}} type=\"flex\">\r\n\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle} loading={loading}>\r\n                                    <Statistic title=\"Markets\" value={markets}/>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle} loading={loading}>\r\n                                    <Statistic suffix='%' precision={2} title=\"Market Cap Change Percent (24hr USD)\" value={market_cap_change_percentage_24h_usd}/>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle} loading={loading}>\r\n                                    <Statistic title=\"Active Cryptocurrencies\" value={active_cryptocurrencies}/>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                            <Card style={cardStyle} loading={loading}>\r\n                                    <Statistic title=\"Ongoing Initial Coin Offerings (ICOS)\" value={ongoing_icos}/>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle} loading={loading}>\r\n                                    <Statistic title=\"Upcoming Initial Coin Offerings (ICOS)\" value={upcoming_icos}/>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                                <Card style={cardStyle} loading={loading}>\r\n                                    <Statistic title=\"Ended Initial Coin Offerings (ICOS)\" value={ended_icos} />\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Content>\r\n                </Layout>\r\n            </React.Fragment>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.global\r\n    } \r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchGlobal,\r\n    setSiderMenuItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactGlobal);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { iconStyle } from '../../styles';\r\nimport logoImage from '../../images/logo/logo.png';\r\nimport { connect } from 'react-redux';\r\nimport { setHeaderMenuItem } from '../../redux_actions'; \r\n\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\nclass ReactHeader extends Component {\r\n\r\n    render() {\r\n        const { selected } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Header className=\"header\">\r\n                    <Menu\r\n                        theme=\"dark\"\r\n                        mode=\"horizontal\"\r\n                        selectedKeys={[selected]}\r\n                        style={{ lineHeight: '64px'}}\r\n                    >\r\n                        <Menu.Item key=\"logo\" onClick={()=>this.props.setHeaderMenuItem('home')}>\r\n                            <Link to=\"/\">\r\n                            <img alt=\"daniel corcorans crypto react app logo\" \r\n                            style={{ maxHeight: '40px'}} \r\n                            src={logoImage}></img>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"home\" onClick={()=>this.props.setHeaderMenuItem('home')}>\r\n                            <Link to=\"/\">\r\n                                <Icon type=\"home\" style={iconStyle}/>Home\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"dashboard\" onClick={()=>this.props.setHeaderMenuItem('dashboard')}>\r\n                            <Link to=\"/status/list\">\r\n                                <Icon type=\"area-chart\" style={iconStyle}/>Dashboard\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"about\" onClick={()=>this.props.setHeaderMenuItem('about')}>\r\n                            <Link to=\"/about\">\r\n                                <Icon type=\"info-circle\" style={iconStyle}/>About\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"source\">\r\n                            <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/danielc92/react-crypto-app\">\r\n                                <Icon theme=\"filled\" type=\"github\" style={iconStyle}/>Source\r\n                            </a>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.header_selected\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setHeaderMenuItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactHeader);\r\n","import React, { Component } from 'react';\r\nimport { Table, Tag, Layout, Typography } from 'antd';\r\nimport { contentStyle, tableStyle } from '../../styles';\r\nimport { connect } from 'react-redux';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nimport { fetchExchanges, setSiderMenuItem } from '../../redux_actions';\r\n\r\nconst { Content } = Layout;\r\nconst { Paragraph, Title } = Typography;\r\n\r\n\r\nclass ReactExchangesList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchExchanges()\r\n        this.props.setSiderMenuItem('exchanges-list')\r\n    }\r\n\r\n    render() {\r\n          const columns = [\r\n            {\r\n              title: 'Id',\r\n              dataIndex: 'id',\r\n              key: 'id',\r\n            },\r\n            {\r\n              title: 'Name',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n              render: country => (<Tag color=\"purple\">{country}</Tag>)\r\n            },\r\n            {\r\n                title: 'Year est.',\r\n                dataIndex: 'year_established',\r\n                key: 'year_established',\r\n              },\r\n              {\r\n                title: 'Country',\r\n                dataIndex: 'country',\r\n                key: 'country',\r\n                render: country => (<Tag color=\"blue\">{country}</Tag>)\r\n              },\r\n              {\r\n                title: 'Trade 24h BTC',\r\n                dataIndex: 'trade_volume_24h_btc',\r\n                key: 'trade_volume_24h_btc',\r\n              }\r\n            ];\r\n\r\n        const loading = this.props.data.length > 0 ? false : true;\r\n\r\n\r\n\r\n        return (\r\n          <React.Fragment>\r\n          <ReactSider/>\r\n            <Layout style={{ padding: '1rem' }}>\r\n                <Content style={contentStyle}>\r\n                    <Title level={2}>Exchanges List</Title>\r\n                    <Paragraph>This page lists available exchanges.</Paragraph>\r\n                    <Table\r\n                    style={tableStyle}\r\n                    bordered={true}\r\n                    loading={loading}\r\n                    dataSource={this.props.data} \r\n                    columns={columns} />\r\n                </Content>\r\n            </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      data: state.exchanges\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  fetchExchanges,\r\n  setSiderMenuItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactExchangesList);","//\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nimport { Layout, Typography, Table, Tag } from 'antd';\r\nimport { contentStyle, tableStyle } from '../../styles';\r\nimport { connect } from 'react-redux';\r\nimport { fetchExchangeRates, setSiderMenuItem } from '../../redux_actions';\r\n\r\n\r\nconst { Content } = Layout;\r\nconst { Title, Paragraph } = Typography;\r\n\r\n\r\nclass ReactExchangeRates extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchExchangeRates();\r\n        this.props.setSiderMenuItem('exchange-rates-list');\r\n    };\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            {\r\n              title: 'Name',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n              render: item => <Tag color=\"purple\">{ item }</Tag>\r\n            },\r\n            {\r\n                title: 'Unit',\r\n                dataIndex: 'unit',\r\n                key: 'unit'\r\n            },\r\n            {\r\n                title: 'Value',\r\n                dataIndex: 'value',\r\n                key: 'value',\r\n            },\r\n            {\r\n                title: 'Type',\r\n                dataIndex: 'type',\r\n                key: 'type',\r\n            }\r\n        ]\r\n\r\n        const loading = this.props.data.length > 0 ? false : true;\r\n        return (\r\n            <React.Fragment>\r\n                <ReactSider/>\r\n                <Layout style={{ padding: '1rem' }}>\r\n                    <Content className=\"text-focus-in\" style={{...contentStyle}}>\r\n                        <Title level={2}>Exchange Rates</Title>\r\n                        <Paragraph>View BTC-to-Currency exchange rates.</Paragraph>\r\n                        <Table\r\n                        style={tableStyle}\r\n                        dataSource={this.props.data}\r\n                        loading={loading}\r\n                        columns={columns}\r\n                        >\r\n                        </Table>\r\n                    </Content>\r\n                </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.exchange_rates\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchExchangeRates,\r\n    setSiderMenuItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactExchangeRates);\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport { footerStyle } from '../../styles';\r\n\r\nconst { Footer } = Layout;\r\n\r\nexport default function ReactFooter() {\r\n    return (\r\n        <Footer style={footerStyle}>\r\n            Developed by <strong>Daniel Corcoran</strong>.<br></br>Built with <strong>React</strong> and Ant Design UI.<br></br>Powered by <strong>CoinGecko</strong> API.</Footer>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Layout, Typography, Row, Col, List, Tag} from 'antd';\r\nimport { colStyle, contentStyle } from '../../styles';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStatusUpdates, setSiderMenuItem, setHeaderMenuItem} from '../../redux_actions';\r\nimport ReactSider from '../Navigation/ReactSider';\r\nconst { Content } = Layout;\r\nconst { Title, Paragraph } = Typography;\r\n\r\nclass ReactStatusUpdates extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchStatusUpdates();\r\n        this.props.setSiderMenuItem('status-list');\r\n        this.props.setHeaderMenuItem('dashboard');\r\n    }\r\n\r\n    render() {\r\n        const loading = this.props.data.length > 0 ? false : true;\r\n        return (\r\n            <React.Fragment>\r\n                <ReactSider/>\r\n                <Layout style={{ padding: '1rem' }}>\r\n                <Content style={contentStyle}>\r\n                    <Title level={2}>Status Updates</Title>\r\n                    <Paragraph>This feature is currently in beta. List all status_updates with data (description, category, created_at, user, user_title and pin)</Paragraph>\r\n                    <Row gutter={16} style={{textAlign: 'center'}} type=\"flex\">\r\n\r\n                        <Col xs={24} sm={24} md={8} lg={8} xl={8} style={colStyle}>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <List\r\n                    pagination={!loading}\r\n                    loading={loading}\r\n                    itemLayout=\"vertical\"\r\n                    size=\"large\"\r\n                    dataSource={this.props.data}\r\n                    renderItem={item => (\r\n                    <List.Item\r\n                        key={item.project.name}\r\n                        extra={\r\n                        <img\r\n                            width={120}\r\n                            alt={item.project.name}\r\n                            src={item.project.image.large}\r\n                        />\r\n                        }\r\n                    >\r\n                        <List.Item.Meta\r\n                        title={item.project.name}\r\n                        description={`Posted by: ${item.user} - ${item.user_title} on ${item.created_at}`}\r\n                        />\r\n                        { item.description }\r\n                        <div style={{marginTop: '1rem'}} >\r\n                            <Tag color=\"orange\">{item.category}</Tag>\r\n                        </div>\r\n                        \r\n                    </List.Item>)}\r\n                ></List>\r\n                </Content>\r\n            </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.status_updates\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    fetchStatusUpdates,\r\n    setSiderMenuItem,\r\n    setHeaderMenuItem\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReactStatusUpdates)","import React, { Component } from 'react';\r\nimport ReactCoinsList from './Coins/ReactCoinsList';\r\nimport ReactCoinsDetail from './Coins/ReactCoinsDetail';\r\nimport ReactHome from './General/ReactHome';\r\nimport ReactAbout from './General/ReactAbout';\r\nimport ReactEvents from './Events/ReactEvents';\r\nimport ReactEmpty from './Empty/ReactEmpty';\r\nimport ReactGlobal from './Global/ReactGlobal';\r\nimport { Route } from 'react-router-dom';\r\nimport { Layout } from 'antd';\r\nimport ReactHeader from './Navigation/ReactHeader';\r\nimport ReactExchangesList from './Exchanges/ReactExchangesList';\r\nimport ReactExchangeRates from './ExchangeRates/ReactExchangeRates';\r\nimport ReactFooter from './Navigation/ReactFooter';\r\nimport './App.css'\r\nimport ReactStatusUpdates from './StatusUpdates/ReactStatusUpdates';\r\n\r\n//[NOTE] React prefix used with React.Components in order to differentiate from Ant Design UI components.\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <Layout style={{minHeight: '100vh', lineHeight: '1.6rem'}}>    \r\n                <ReactHeader/>\r\n                <Layout>\r\n                    <Route path='/' exact component={ReactHome}/>\r\n                    <Route path='/about' exact component={ReactAbout}/>\r\n                    <Route path='/coins' exact component={ReactCoinsList}/>\r\n                    <Route path='/coins/:coinId/' exact component={ReactCoinsDetail}/>\r\n                    <Route path='/exchanges/list' exact component={ReactExchangesList}/>\r\n                    <Route path='/global' exact component={ReactGlobal}/>\r\n                    <Route path='/empty' exact component={ReactEmpty}/>\r\n                    <Route path='/events/list' exact component={ReactEvents}/>\r\n                    <Route path='/exchange-rates' exact component={ReactExchangeRates}/>\r\n                    <Route path='/status/list' exact component={ReactStatusUpdates}/>\r\n                </Layout>\r\n                <ReactFooter/>\r\n            </Layout>\r\n        )\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { market_processed_table_keys } from '../constants';\r\nimport {GET_COIN_LIST, \r\n        GET_COIN_DETAILS, \r\n        GET_COIN_CHART,\r\n        GET_EVENT_LIST,\r\n        GET_EXCHANGES_LIST,\r\n        GET_EXCHANGE_RATES,\r\n        GET_GLOBAL,\r\n        GET_STATUS_UPDATES,\r\n        SET_HEADER_MENU_ITEM,\r\n        SET_SIDER_MENU_ITEM } from '../redux_actions';\r\n\r\n\r\nconst coinsReducer = (state=[], action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_COIN_LIST:\r\n            return payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nconst compileMarketData = (marketData) => {\r\n\r\n    let data = {}\r\n\r\n    for (let market_index = 0; market_index < market_processed_table_keys.length; market_index++) {\r\n        let field = market_processed_table_keys[market_index]\r\n        let entries = Object.entries(marketData[field])\r\n        for (let i = 0; i < entries.length; i ++) {\r\n            let key = entries[i][0]\r\n            let value = entries[i][1]\r\n            if (Object.keys(data).includes(key)){\r\n                data[key] = { ...data[key], [field]: value, currency: key }\r\n            } else {\r\n                data[key] = { [field]: value, currency: key }\r\n            }   \r\n        }\r\n    }\r\n\r\n    return Object.values(data)\r\n\r\n} \r\n\r\nconst coinDetailsReducer = (state = {}, action) => {\r\n    const { type, payload } = action;\r\n    \r\n    switch(type) {\r\n        case GET_COIN_DETAILS:\r\n            const market_data_processed = compileMarketData(payload.market_data)\r\n            return {...payload, market_data_processed}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nconst coinMarketDetailsReducer = (state={}, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_COIN_CHART:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst globalReducer = (state={}, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_GLOBAL:\r\n            return payload.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst exchangesReducer = (state=[], action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_EXCHANGES_LIST:\r\n            return payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst exchangeRatesReducer = (state=[], action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_EXCHANGE_RATES:\r\n            let rates = Object.values(payload.rates)\r\n            return rates\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst eventReducer = (state=[], action) => {\r\n    const { type, payload } = action;\r\n    \r\n    switch(type) {\r\n        case GET_EVENT_LIST:\r\n            return payload.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst statusUpdatesReducer = (state=[], action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_STATUS_UPDATES:\r\n            return payload.status_updates\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst headerMenuItemReducer = (state='', action) => {\r\n    const { type, payload } = action;\r\n    \r\n    switch(type) {\r\n        case SET_HEADER_MENU_ITEM:\r\n            return payload.item; \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst siderMenuItemReducer = (state='status-list', action) => {\r\n    const { type, payload } = action;\r\n    \r\n    switch(type) {\r\n        case SET_SIDER_MENU_ITEM:\r\n            return payload.item; \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    events: eventReducer,\r\n    status_updates: statusUpdatesReducer,\r\n    global: globalReducer,\r\n    exchanges: exchangesReducer,\r\n    exchange_rates: exchangeRatesReducer,\r\n    coins: coinsReducer,\r\n    coin_details: coinDetailsReducer,\r\n    coin_market_details: coinMarketDetailsReducer,\r\n    header_selected: headerMenuItemReducer,\r\n    sider_selected: siderMenuItemReducer\r\n})","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { rootReducer } from './redux_reducers/';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n// [NOTE] import antd css so that it becomes available for all components in App\r\nimport 'antd/dist/antd.css';\r\n// [NOTE] Wrap all components in a Router\r\nimport { HashRouter } from 'react-router-dom';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunk)\r\n    ));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </Provider>, \r\n    document.getElementById('root'))"],"sourceRoot":""}